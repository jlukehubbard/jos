!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon2
ALT	kern/console.c	218;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
C	kern/console.c	285;"	d	file:
CAPSLOCK	kern/console.c	220;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	14;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	26;"	d	file:
COM_DLL	kern/console.c	30;"	d	file:
COM_DLM	kern/console.c	31;"	d	file:
COM_FCR	kern/console.c	35;"	d	file:
COM_IER	kern/console.c	32;"	d	file:
COM_IER_RDI	kern/console.c	33;"	d	file:
COM_IIR	kern/console.c	34;"	d	file:
COM_LCR	kern/console.c	36;"	d	file:
COM_LCR_DLAB	kern/console.c	37;"	d	file:
COM_LCR_WLEN8	kern/console.c	38;"	d	file:
COM_LSR	kern/console.c	43;"	d	file:
COM_LSR_DATA	kern/console.c	44;"	d	file:
COM_LSR_TSRE	kern/console.c	46;"	d	file:
COM_LSR_TXRDY	kern/console.c	45;"	d	file:
COM_MCR	kern/console.c	39;"	d	file:
COM_MCR_DTR	kern/console.c	41;"	d	file:
COM_MCR_OUT2	kern/console.c	42;"	d	file:
COM_MCR_RTS	kern/console.c	40;"	d	file:
COM_RX	kern/console.c	28;"	d	file:
COM_TX	kern/console.c	29;"	d	file:
CONSBUFSIZE	kern/console.c	385;"	d	file:
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	217;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	224;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon3
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon3
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_RTC	kern/kclock.h	9;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	37;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=2$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	101;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon3
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	214;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	221;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Sep 12 14:51:29 EDT 2018$/;"	m
PADDR	kern/pmap.h	25;"	d
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SCROLLLOCK	kern/console.c	222;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	216;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TOP	GNUmakefile	/^TOP = .$/;"	m
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
V	conf/env.mk	/^V = @$/;"	m
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	100;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^            base = 8;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c_ebp	obj/kern/kernel.asm	/^        c_ebp = ebp[0];$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon1	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 30 11 00       	mov    $0x113000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 10 11 f0       	mov    $0xf0111000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <i386_init>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	e8 03 01 00 00       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f010004c	obj/kern/kernel.asm	/^f010004c:	81 c3 bc 22 01 00    	add    $0x122bc,%ebx$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	c7 c2 60 40 11 f0    	mov    $0xf0114060,%edx$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	c7 c0 a0 46 11 f0    	mov    $0xf01146a0,%eax$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	29 d0                	sub    %edx,%eax$/;"	l
f0100060	obj/kern/kernel.asm	/^f0100060:	50                   	push   %eax$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	6a 00                	push   $0x0$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	52                   	push   %edx$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	e8 70 18 00 00       	call   f01018d9 <memset>$/;"	l
f0100069	obj/kern/kernel.asm	/^f0100069:	e8 36 05 00 00       	call   f01005a4 <cons_init>$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100071	obj/kern/kernel.asm	/^f0100071:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	8d 83 18 fa fe ff    	lea    -0x105e8(%ebx),%eax$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	50                   	push   %eax$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 43 0c 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	e8 6f 0a 00 00       	call   f0100af6 <mem_init>$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008a	obj/kern/kernel.asm	/^f010008a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010008d	obj/kern/kernel.asm	/^f010008d:	6a 00                	push   $0x0$/;"	l
f010008f	obj/kern/kernel.asm	/^f010008f:	e8 cd 08 00 00       	call   f0100961 <monitor>$/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	eb f1                	jmp    f010008a <i386_init+0x4a>$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099 <_panic>:$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	55                   	push   %ebp$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	89 e5                	mov    %esp,%ebp$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	57                   	push   %edi$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	56                   	push   %esi$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	53                   	push   %ebx$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000a2	obj/kern/kernel.asm	/^f01000a2:	e8 a8 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	81 c3 61 22 01 00    	add    $0x12261,%ebx$/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	c7 c0 a4 46 11 f0    	mov    $0xf01146a4,%eax$/;"	l
f01000b6	obj/kern/kernel.asm	/^f01000b6:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	74 0f                	je     f01000ca <_panic+0x31>$/;"	l
f01000bb	obj/kern/kernel.asm	/^f01000bb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	6a 00                	push   $0x0$/;"	l
f01000c0	obj/kern/kernel.asm	/^f01000c0:	e8 9c 08 00 00       	call   f0100961 <monitor>$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000c8	obj/kern/kernel.asm	/^f01000c8:	eb f1                	jmp    f01000bb <_panic+0x22>$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	89 38                	mov    %edi,(%eax)$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	fa                   	cli    $/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	fc                   	cld    $/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	8d 83 33 fa fe ff    	lea    -0x105cd(%ebx),%eax$/;"	l
f01000e0	obj/kern/kernel.asm	/^f01000e0:	50                   	push   %eax$/;"	l
f01000e1	obj/kern/kernel.asm	/^f01000e1:	e8 df 0b 00 00       	call   f0100cc5 <cprintf>$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	56                   	push   %esi$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	57                   	push   %edi$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	e8 9e 0b 00 00       	call   f0100c8e <vcprintf>$/;"	l
f01000f0	obj/kern/kernel.asm	/^f01000f0:	8d 83 6f fa fe ff    	lea    -0x10591(%ebx),%eax$/;"	l
f01000f6	obj/kern/kernel.asm	/^f01000f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	e8 c7 0b 00 00       	call   f0100cc5 <cprintf>$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	eb b8                	jmp    f01000bb <_panic+0x22>$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103 <_warn>:$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	55                   	push   %ebp$/;"	l
f0100104	obj/kern/kernel.asm	/^f0100104:	89 e5                	mov    %esp,%ebp$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	56                   	push   %esi$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	53                   	push   %ebx$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	e8 42 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f010010d	obj/kern/kernel.asm	/^f010010d:	81 c3 fb 21 01 00    	add    $0x121fb,%ebx$/;"	l
f0100113	obj/kern/kernel.asm	/^f0100113:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	8d 83 4b fa fe ff    	lea    -0x105b5(%ebx),%eax$/;"	l
f0100125	obj/kern/kernel.asm	/^f0100125:	50                   	push   %eax$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	e8 9a 0b 00 00       	call   f0100cc5 <cprintf>$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	83 c4 08             	add    $0x8,%esp$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	56                   	push   %esi$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	e8 57 0b 00 00       	call   f0100c8e <vcprintf>$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	8d 83 6f fa fe ff    	lea    -0x10591(%ebx),%eax$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	e8 80 0b 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100145	obj/kern/kernel.asm	/^f0100145:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	5b                   	pop    %ebx$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	5e                   	pop    %esi$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	5d                   	pop    %ebp$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	c3                   	ret    $/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f <__x86.get_pc_thunk.bx>:$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	c3                   	ret    $/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153 <serial_proc_data>:$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	55                   	push   %ebp$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	89 e5                	mov    %esp,%ebp$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	ec                   	in     (%dx),%al$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	a8 01                	test   $0x1,%al$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	74 0b                	je     f010016b <serial_proc_data+0x18>$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	ec                   	in     (%dx),%al$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	5d                   	pop    %ebp$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	c3                   	ret    $/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	eb f7                	jmp    f0100169 <serial_proc_data+0x16>$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172 <cons_intr>:$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	55                   	push   %ebp$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	89 e5                	mov    %esp,%ebp$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	56                   	push   %esi$/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	53                   	push   %ebx$/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177:	e8 d3 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	81 c3 8c 21 01 00    	add    $0x1218c,%ebx$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	89 c6                	mov    %eax,%esi$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	ff d6                	call   *%esi$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	74 2e                	je     f01001b9 <cons_intr+0x47>$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	85 c0                	test   %eax,%eax$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	74 f5                	je     f0100184 <cons_intr+0x12>$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	8b 8b 7c 1f 00 00    	mov    0x1f7c(%ebx),%ecx$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0100198	obj/kern/kernel.asm	/^f0100198:	89 93 7c 1f 00 00    	mov    %edx,0x1f7c(%ebx)$/;"	l
f010019e	obj/kern/kernel.asm	/^f010019e:	88 84 0b 78 1d 00 00 	mov    %al,0x1d78(%ebx,%ecx,1)$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	75 d7                	jne    f0100184 <cons_intr+0x12>$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	c7 83 7c 1f 00 00 00 	movl   $0x0,0x1f7c(%ebx)$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	00 00 00 $/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	eb cb                	jmp    f0100184 <cons_intr+0x12>$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	5b                   	pop    %ebx$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	5e                   	pop    %esi$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	5d                   	pop    %ebp$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	c3                   	ret    $/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd <kbd_proc_data>:$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	55                   	push   %ebp$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	89 e5                	mov    %esp,%ebp$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	56                   	push   %esi$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	53                   	push   %ebx$/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	e8 88 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01001c7	obj/kern/kernel.asm	/^f01001c7:	81 c3 41 21 01 00    	add    $0x12141,%ebx$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	ec                   	in     (%dx),%al$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	a8 01                	test   $0x1,%al$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	0f 84 06 01 00 00    	je     f01002e1 <kbd_proc_data+0x124>$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	a8 20                	test   $0x20,%al$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	0f 85 05 01 00 00    	jne    f01002e8 <kbd_proc_data+0x12b>$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01001e8	obj/kern/kernel.asm	/^f01001e8:	ec                   	in     (%dx),%al$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	89 c2                	mov    %eax,%edx$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	3c e0                	cmp    $0xe0,%al$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	0f 84 93 00 00 00    	je     f0100286 <kbd_proc_data+0xc9>$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	84 c0                	test   %al,%al$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	0f 88 a0 00 00 00    	js     f010029b <kbd_proc_data+0xde>$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	8b 8b 58 1d 00 00    	mov    0x1d58(%ebx),%ecx$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	74 0e                	je     f0100214 <kbd_proc_data+0x57>$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	89 c2                	mov    %eax,%edx$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	89 8b 58 1d 00 00    	mov    %ecx,0x1d58(%ebx)$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	0f b6 84 13 98 fb fe 	movzbl -0x10468(%ebx,%edx,1),%eax$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	ff $/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	0b 83 58 1d 00 00    	or     0x1d58(%ebx),%eax$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	0f b6 8c 13 98 fa fe 	movzbl -0x10568(%ebx,%edx,1),%ecx$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	ff $/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	31 c8                	xor    %ecx,%eax$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	89 83 58 1d 00 00    	mov    %eax,0x1d58(%ebx)$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	89 c1                	mov    %eax,%ecx$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	8b 8c 8b f8 1c 00 00 	mov    0x1cf8(%ebx,%ecx,4),%ecx$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	a8 08                	test   $0x8,%al$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	74 0d                	je     f0100259 <kbd_proc_data+0x9c>$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	89 f2                	mov    %esi,%edx$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	8d 4e 9f             	lea    -0x61(%esi),%ecx$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	77 7a                	ja     f01002d0 <kbd_proc_data+0x113>$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	83 ee 20             	sub    $0x20,%esi$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	f7 d0                	not    %eax$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	a8 06                	test   $0x6,%al$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	75 33                	jne    f0100292 <kbd_proc_data+0xd5>$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	81 fe e9 00 00 00    	cmp    $0xe9,%esi$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	75 2b                	jne    f0100292 <kbd_proc_data+0xd5>$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	8d 83 65 fa fe ff    	lea    -0x1059b(%ebx),%eax$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	50                   	push   %eax$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	e8 4f 0a 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	ee                   	out    %al,(%dx)$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	eb 0c                	jmp    f0100292 <kbd_proc_data+0xd5>$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	83 8b 58 1d 00 00 40 	orl    $0x40,0x1d58(%ebx)$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	89 f0                	mov    %esi,%eax$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	5b                   	pop    %ebx$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	5e                   	pop    %esi$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	5d                   	pop    %ebp$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	c3                   	ret    $/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	8b 8b 58 1d 00 00    	mov    0x1d58(%ebx),%ecx$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	89 ce                	mov    %ecx,%esi$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	83 e6 40             	and    $0x40,%esi$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	85 f6                	test   %esi,%esi$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	0f b6 84 13 98 fb fe 	movzbl -0x10468(%ebx,%edx,1),%eax$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	ff $/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	83 c8 40             	or     $0x40,%eax$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	f7 d0                	not    %eax$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	21 c8                	and    %ecx,%eax$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	89 83 58 1d 00 00    	mov    %eax,0x1d58(%ebx)$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	eb c2                	jmp    f0100292 <kbd_proc_data+0xd5>$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	83 ea 41             	sub    $0x41,%edx$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	8d 4e 20             	lea    0x20(%esi),%ecx$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	83 fa 1a             	cmp    $0x1a,%edx$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	0f 42 f1             	cmovb  %ecx,%esi$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	e9 78 ff ff ff       	jmp    f0100259 <kbd_proc_data+0x9c>$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	eb aa                	jmp    f0100292 <kbd_proc_data+0xd5>$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	eb a3                	jmp    f0100292 <kbd_proc_data+0xd5>$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef <cons_putc>:$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	55                   	push   %ebp$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	89 e5                	mov    %esp,%ebp$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	57                   	push   %edi$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	56                   	push   %esi$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	53                   	push   %ebx$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	e8 52 fe ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	81 c3 0b 20 01 00    	add    $0x1200b,%ebx$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	eb 09                	jmp    f0100320 <cons_putc+0x31>$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	89 ca                	mov    %ecx,%edx$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	ec                   	in     (%dx),%al$/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	ec                   	in     (%dx),%al$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	ec                   	in     (%dx),%al$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	ec                   	in     (%dx),%al$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	89 fa                	mov    %edi,%edx$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	ec                   	in     (%dx),%al$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	a8 20                	test   $0x20,%al$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	75 08                	jne    f010032f <cons_putc+0x40>$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	7e e8                	jle    f0100317 <cons_putc+0x28>$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	89 f8                	mov    %edi,%eax$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010033c	obj/kern/kernel.asm	/^f010033c:	ee                   	out    %al,(%dx)$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	eb 09                	jmp    f0100357 <cons_putc+0x68>$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	89 ca                	mov    %ecx,%edx$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	ec                   	in     (%dx),%al$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	ec                   	in     (%dx),%al$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	ec                   	in     (%dx),%al$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	ec                   	in     (%dx),%al$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	89 fa                	mov    %edi,%edx$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	ec                   	in     (%dx),%al$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	7f 04                	jg     f0100366 <cons_putc+0x77>$/;"	l
f0100362	obj/kern/kernel.asm	/^f0100362:	84 c0                	test   %al,%al$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	79 e8                	jns    f010034e <cons_putc+0x5f>$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	ee                   	out    %al,(%dx)$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	ee                   	out    %al,(%dx)$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	ee                   	out    %al,(%dx)$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	89 fa                	mov    %edi,%edx$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	89 f8                	mov    %edi,%eax$/;"	l
f010038e	obj/kern/kernel.asm	/^f010038e:	80 cc 07             	or     $0x7,%ah$/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	85 d2                	test   %edx,%edx$/;"	l
f0100393	obj/kern/kernel.asm	/^f0100393:	0f 45 c7             	cmovne %edi,%eax$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	0f 84 b9 00 00 00    	je     f010045e <cons_putc+0x16f>$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	7e 74                	jle    f010041e <cons_putc+0x12f>$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	0f 84 9e 00 00 00    	je     f0100451 <cons_putc+0x162>$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	0f 85 d9 00 00 00    	jne    f0100495 <cons_putc+0x1a6>$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	0f b7 83 80 1f 00 00 	movzwl 0x1f80(%ebx),%eax$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	66 89 83 80 1f 00 00 	mov    %ax,0x1f80(%ebx)$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	66 81 bb 80 1f 00 00 	cmpw   $0x7cf,0x1f80(%ebx)$/;"	l
f01003e0	obj/kern/kernel.asm	/^f01003e0:	cf 07 $/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	0f 87 d4 00 00 00    	ja     f01004bc <cons_putc+0x1cd>$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	8b 8b 88 1f 00 00    	mov    0x1f88(%ebx),%ecx$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	89 ca                	mov    %ecx,%edx$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	ee                   	out    %al,(%dx)$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	0f b7 9b 80 1f 00 00 	movzwl 0x1f80(%ebx),%ebx$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	89 d8                	mov    %ebx,%eax$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	89 f2                	mov    %esi,%edx$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	ee                   	out    %al,(%dx)$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	89 ca                	mov    %ecx,%edx$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	ee                   	out    %al,(%dx)$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	89 d8                	mov    %ebx,%eax$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	89 f2                	mov    %esi,%edx$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	ee                   	out    %al,(%dx)$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	5b                   	pop    %ebx$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	5e                   	pop    %esi$/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	5f                   	pop    %edi$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	5d                   	pop    %ebp$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	c3                   	ret    $/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	75 72                	jne    f0100495 <cons_putc+0x1a6>$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	0f b7 83 80 1f 00 00 	movzwl 0x1f80(%ebx),%eax$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	66 85 c0             	test   %ax,%ax$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	74 b9                	je     f01003e8 <cons_putc+0xf9>$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	66 89 83 80 1f 00 00 	mov    %ax,0x1f80(%ebx)$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	0f b7 55 e4          	movzwl -0x1c(%ebp),%edx$/;"	l
f0100440	obj/kern/kernel.asm	/^f0100440:	b2 00                	mov    $0x0,%dl$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	83 ca 20             	or     $0x20,%edx$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	8b 8b 84 1f 00 00    	mov    0x1f84(%ebx),%ecx$/;"	l
f010044b	obj/kern/kernel.asm	/^f010044b:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	eb 88                	jmp    f01003d9 <cons_putc+0xea>$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	66 83 83 80 1f 00 00 	addw   $0x50,0x1f80(%ebx)$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	50 $/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	e9 5e ff ff ff       	jmp    f01003bc <cons_putc+0xcd>$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	e8 87 fe ff ff       	call   f01002ef <cons_putc>$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	e8 7d fe ff ff       	call   f01002ef <cons_putc>$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	e8 73 fe ff ff       	call   f01002ef <cons_putc>$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	e8 69 fe ff ff       	call   f01002ef <cons_putc>$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	e8 5f fe ff ff       	call   f01002ef <cons_putc>$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	e9 44 ff ff ff       	jmp    f01003d9 <cons_putc+0xea>$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	0f b7 83 80 1f 00 00 	movzwl 0x1f80(%ebx),%eax$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	66 89 93 80 1f 00 00 	mov    %dx,0x1f80(%ebx)$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	8b 93 84 1f 00 00    	mov    0x1f84(%ebx),%edx$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	0f b7 7d e4          	movzwl -0x1c(%ebp),%edi$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	e9 1d ff ff ff       	jmp    f01003d9 <cons_putc+0xea>$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	8b 83 84 1f 00 00    	mov    0x1f84(%ebx),%eax$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01004c5	obj/kern/kernel.asm	/^f01004c5:	68 00 0f 00 00       	push   $0xf00$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	52                   	push   %edx$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	50                   	push   %eax$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	e8 4f 14 00 00       	call   f0101926 <memmove>$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	8b 93 84 1f 00 00    	mov    0x1f84(%ebx),%edx$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f01004e3	obj/kern/kernel.asm	/^f01004e3:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	83 c0 02             	add    $0x2,%eax$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	39 d0                	cmp    %edx,%eax$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	75 f4                	jne    f01004ec <cons_putc+0x1fd>$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	66 83 ab 80 1f 00 00 	subw   $0x50,0x1f80(%ebx)$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	50 $/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	e9 e3 fe ff ff       	jmp    f01003e8 <cons_putc+0xf9>$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505 <serial_intr>:$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	e8 e7 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	05 fe 1d 01 00       	add    $0x11dfe,%eax$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	80 b8 8c 1f 00 00 00 	cmpb   $0x0,0x1f8c(%eax)$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	75 02                	jne    f010051a <serial_intr+0x15>$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	f3 c3                	repz ret $/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	55                   	push   %ebp$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	89 e5                	mov    %esp,%ebp$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	8d 80 4b de fe ff    	lea    -0x121b5(%eax),%eax$/;"	l
f0100526	obj/kern/kernel.asm	/^f0100526:	e8 47 fc ff ff       	call   f0100172 <cons_intr>$/;"	l
f010052b	obj/kern/kernel.asm	/^f010052b:	c9                   	leave  $/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	c3                   	ret    $/;"	l
f010052d	obj/kern/kernel.asm	/^f010052d <kbd_intr>:$/;"	l
f010052d	obj/kern/kernel.asm	/^f010052d:	55                   	push   %ebp$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	e8 b9 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	05 d0 1d 01 00       	add    $0x11dd0,%eax$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	8d 80 b5 de fe ff    	lea    -0x1214b(%eax),%eax$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	e8 2a fc ff ff       	call   f0100172 <cons_intr>$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	c9                   	leave  $/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	c3                   	ret    $/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a <cons_getc>:$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	55                   	push   %ebp$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	89 e5                	mov    %esp,%ebp$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	53                   	push   %ebx$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	e8 f9 fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	81 c3 b2 1d 01 00    	add    $0x11db2,%ebx$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	e8 a4 ff ff ff       	call   f0100505 <serial_intr>$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	e8 c7 ff ff ff       	call   f010052d <kbd_intr>$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	8b 93 78 1f 00 00    	mov    0x1f78(%ebx),%edx$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	3b 93 7c 1f 00 00    	cmp    0x1f7c(%ebx),%edx$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	74 19                	je     f0100592 <cons_getc+0x48>$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	89 8b 78 1f 00 00    	mov    %ecx,0x1f78(%ebx)$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	0f b6 84 13 78 1d 00 	movzbl 0x1d78(%ebx,%edx,1),%eax$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	00 $/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	74 06                	je     f0100598 <cons_getc+0x4e>$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	5b                   	pop    %ebx$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	5d                   	pop    %ebp$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	c3                   	ret    $/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	c7 83 78 1f 00 00 00 	movl   $0x0,0x1f78(%ebx)$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	00 00 00 $/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	eb ee                	jmp    f0100592 <cons_getc+0x48>$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4 <cons_init>:$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	55                   	push   %ebp$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	57                   	push   %edi$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	56                   	push   %esi$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	53                   	push   %ebx$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	e8 9d fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	81 c3 56 1d 01 00    	add    $0x11d56,%ebx$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	5a a5 $/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	0f 84 bc 00 00 00    	je     f0100695 <cons_init+0xf1>$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	c7 83 88 1f 00 00 b4 	movl   $0x3b4,0x1f88(%ebx)$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	03 00 00 $/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	c7 45 e4 00 00 0b f0 	movl   $0xf00b0000,-0x1c(%ebp)$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	8b bb 88 1f 00 00    	mov    0x1f88(%ebx),%edi$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	89 fa                	mov    %edi,%edx$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	ee                   	out    %al,(%dx)$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	8d 4f 01             	lea    0x1(%edi),%ecx$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	89 ca                	mov    %ecx,%edx$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	ec                   	in     (%dx),%al$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	89 fa                	mov    %edi,%edx$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	ee                   	out    %al,(%dx)$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	89 ca                	mov    %ecx,%edx$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	ec                   	in     (%dx),%al$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	89 bb 84 1f 00 00    	mov    %edi,0x1f84(%ebx)$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	09 c6                	or     %eax,%esi$/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	66 89 b3 80 1f 00 00 	mov    %si,0x1f80(%ebx)$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	89 c8                	mov    %ecx,%eax$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	ee                   	out    %al,(%dx)$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	89 fa                	mov    %edi,%edx$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	ee                   	out    %al,(%dx)$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	ee                   	out    %al,(%dx)$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	be f9 03 00 00       	mov    $0x3f9,%esi$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	89 c8                	mov    %ecx,%eax$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	89 f2                	mov    %esi,%edx$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	ee                   	out    %al,(%dx)$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	89 fa                	mov    %edi,%edx$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	ee                   	out    %al,(%dx)$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	89 c8                	mov    %ecx,%eax$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	ee                   	out    %al,(%dx)$/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	89 f2                	mov    %esi,%edx$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	ee                   	out    %al,(%dx)$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	ec                   	in     (%dx),%al$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	89 c1                	mov    %eax,%ecx$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	3c ff                	cmp    $0xff,%al$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	0f 95 83 8c 1f 00 00 	setne  0x1f8c(%ebx)$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	ec                   	in     (%dx),%al$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	ec                   	in     (%dx),%al$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	74 25                	je     f01006b2 <cons_init+0x10e>$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	5b                   	pop    %ebx$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	5e                   	pop    %esi$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	5f                   	pop    %edi$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	5d                   	pop    %ebp$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	c3                   	ret    $/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	c7 83 88 1f 00 00 d4 	movl   $0x3d4,0x1f88(%ebx)$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	03 00 00 $/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	c7 45 e4 00 80 0b f0 	movl   $0xf00b8000,-0x1c(%ebp)$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	e9 38 ff ff ff       	jmp    f01005ea <cons_init+0x46>$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	8d 83 71 fa fe ff    	lea    -0x1058f(%ebx),%eax$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	50                   	push   %eax$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	e8 04 06 00 00       	call   f0100cc5 <cprintf>$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	eb c7                	jmp    f010068d <cons_init+0xe9>$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6 <cputchar>:$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	55                   	push   %ebp$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	e8 1b fc ff ff       	call   f01002ef <cons_putc>$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	c9                   	leave  $/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	c3                   	ret    $/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6 <getchar>:$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	55                   	push   %ebp$/;"	l
f01006d7	obj/kern/kernel.asm	/^f01006d7:	89 e5                	mov    %esp,%ebp$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	e8 69 fe ff ff       	call   f010054a <cons_getc>$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	85 c0                	test   %eax,%eax$/;"	l
f01006e3	obj/kern/kernel.asm	/^f01006e3:	74 f7                	je     f01006dc <getchar+0x6>$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	c9                   	leave  $/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	c3                   	ret    $/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7 <iscons>:$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	55                   	push   %ebp$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01006ea	obj/kern/kernel.asm	/^f01006ea:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	5d                   	pop    %ebp$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	c3                   	ret    $/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1 <__x86.get_pc_thunk.ax>:$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	8b 04 24             	mov    (%esp),%eax$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	c3                   	ret    $/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5 <mon_help>:$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	55                   	push   %ebp$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	56                   	push   %esi$/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	53                   	push   %ebx$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	e8 50 fa ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	81 c3 09 1c 01 00    	add    $0x11c09,%ebx$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	8d 83 98 fc fe ff    	lea    -0x10368(%ebx),%eax$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	50                   	push   %eax$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	8d 83 b6 fc fe ff    	lea    -0x1034a(%ebx),%eax$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	50                   	push   %eax$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	8d b3 bb fc fe ff    	lea    -0x10345(%ebx),%esi$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	56                   	push   %esi$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	e8 a3 05 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	8d 83 74 fd fe ff    	lea    -0x1028c(%ebx),%eax$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	50                   	push   %eax$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	8d 83 c4 fc fe ff    	lea    -0x1033c(%ebx),%eax$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	50                   	push   %eax$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	56                   	push   %esi$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	e8 8c 05 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	8d 83 9c fd fe ff    	lea    -0x10264(%ebx),%eax$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	50                   	push   %eax$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	8d 83 cd fc fe ff    	lea    -0x10333(%ebx),%eax$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	50                   	push   %eax$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	56                   	push   %esi$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	e8 75 05 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	5b                   	pop    %ebx$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	5e                   	pop    %esi$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	5d                   	pop    %ebp$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	c3                   	ret    $/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c <mon_kerninfo>:$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	55                   	push   %ebp$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	89 e5                	mov    %esp,%ebp$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	57                   	push   %edi$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	56                   	push   %esi$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	53                   	push   %ebx$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	e8 e5 f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	81 c3 9e 1b 01 00    	add    $0x11b9e,%ebx$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	8d 83 d7 fc fe ff    	lea    -0x10329(%ebx),%eax$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	50                   	push   %eax$/;"	l
f0100777	obj/kern/kernel.asm	/^f0100777:	e8 49 05 00 00       	call   f0100cc5 <cprintf>$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	8d 83 cc fd fe ff    	lea    -0x10234(%ebx),%eax$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	50                   	push   %eax$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	e8 34 05 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	c7 c7 0c 00 10 f0    	mov    $0xf010000c,%edi$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	8d 87 00 00 00 10    	lea    0x10000000(%edi),%eax$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	50                   	push   %eax$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	57                   	push   %edi$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	8d 83 f4 fd fe ff    	lea    -0x1020c(%ebx),%eax$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	50                   	push   %eax$/;"	l
f01007a9	obj/kern/kernel.asm	/^f01007a9:	e8 17 05 00 00       	call   f0100cc5 <cprintf>$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	c7 c0 19 1d 10 f0    	mov    $0xf0101d19,%eax$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	52                   	push   %edx$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	50                   	push   %eax$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	8d 83 18 fe fe ff    	lea    -0x101e8(%ebx),%eax$/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	50                   	push   %eax$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	e8 fa 04 00 00       	call   f0100cc5 <cprintf>$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	c7 c0 60 40 11 f0    	mov    $0xf0114060,%eax$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	52                   	push   %edx$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	50                   	push   %eax$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	8d 83 3c fe fe ff    	lea    -0x101c4(%ebx),%eax$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	50                   	push   %eax$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	e8 dd 04 00 00       	call   f0100cc5 <cprintf>$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	c7 c6 a0 46 11 f0    	mov    $0xf01146a0,%esi$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	50                   	push   %eax$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	56                   	push   %esi$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	8d 83 60 fe fe ff    	lea    -0x101a0(%ebx),%eax$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	50                   	push   %eax$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	e8 c0 04 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100805	obj/kern/kernel.asm	/^f0100805:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	81 c6 ff 03 00 00    	add    $0x3ff,%esi$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	29 fe                	sub    %edi,%esi$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	c1 fe 0a             	sar    $0xa,%esi$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	56                   	push   %esi$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	8d 83 84 fe fe ff    	lea    -0x1017c(%ebx),%eax$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	50                   	push   %eax$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	e8 a5 04 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100828	obj/kern/kernel.asm	/^f0100828:	5b                   	pop    %ebx$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	5e                   	pop    %esi$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	5f                   	pop    %edi$/;"	l
f010082b	obj/kern/kernel.asm	/^f010082b:	5d                   	pop    %ebp$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	c3                   	ret    $/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d <mon_backtrace>:$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	55                   	push   %ebp$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	57                   	push   %edi$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	56                   	push   %esi$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	53                   	push   %ebx$/;"	l
f0100833	obj/kern/kernel.asm	/^f0100833:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	e8 14 f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	81 c3 cd 1a 01 00    	add    $0x11acd,%ebx$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	8d 83 f0 fc fe ff    	lea    -0x10310(%ebx),%eax$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	50                   	push   %eax$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	e8 78 04 00 00       	call   f0100cc5 <cprintf>$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	89 ef                	mov    %ebp,%edi$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	8d 83 02 fd fe ff    	lea    -0x102fe(%ebx),%eax$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	8d 83 0d fd fe ff    	lea    -0x102f3(%ebx),%eax$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	e9 e3 00 00 00       	jmp    f010094c <mon_backtrace+0x11f>$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	89 7d c0             	mov    %edi,-0x40(%ebp)$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	57                   	push   %edi$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	e8 4d 04 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	83 c4 08             	add    $0x8,%esp$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	ff 77 04             	pushl  0x4(%edi)$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	e8 3f 04 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	8d 83 18 fd fe ff    	lea    -0x102e8(%ebx),%eax$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	e8 31 04 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	8d 77 08             	lea    0x8(%edi),%esi$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	8d 47 1c             	lea    0x1c(%edi),%eax$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	8d bb 07 fd fe ff    	lea    -0x102f9(%ebx),%edi$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	ff 36                	pushl  (%esi)$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	57                   	push   %edi$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	e8 14 04 00 00       	call   f0100cc5 <cprintf>$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	83 c6 04             	add    $0x4,%esi$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	3b 75 c4             	cmp    -0x3c(%ebp),%esi$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	75 ea                	jne    f01008a6 <mon_backtrace+0x79>$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	8d 83 6f fa fe ff    	lea    -0x10591(%ebx),%eax$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	50                   	push   %eax$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	e8 fa 03 00 00       	call   f0100cc5 <cprintf>$/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	6a 18                	push   $0x18$/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	6a 00                	push   $0x0$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	8d 75 d0             	lea    -0x30(%ebp),%esi$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	56                   	push   %esi$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	e8 fe 0f 00 00       	call   f01018d9 <memset>$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	83 c4 08             	add    $0x8,%esp$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	56                   	push   %esi$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	ff 77 04             	pushl  0x4(%edi)$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	e8 df 04 00 00       	call   f0100dc9 <debuginfo_eip>$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	8d 83 1f fd fe ff    	lea    -0x102e1(%ebx),%eax$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	e8 cd 03 00 00       	call   f0100cc5 <cprintf>$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	83 c4 08             	add    $0x8,%esp$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	8d 83 29 fd fe ff    	lea    -0x102d7(%ebx),%eax$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	50                   	push   %eax$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	e8 bb 03 00 00       	call   f0100cc5 <cprintf>$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	8d 83 46 fa fe ff    	lea    -0x105ba(%ebx),%eax$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	50                   	push   %eax$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	e8 a9 03 00 00       	call   f0100cc5 <cprintf>$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	8d 83 2d fd fe ff    	lea    -0x102d3(%ebx),%eax$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	50                   	push   %eax$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	e8 94 03 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	50                   	push   %eax$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	8d 83 32 fd fe ff    	lea    -0x102ce(%ebx),%eax$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	50                   	push   %eax$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	e8 7e 03 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	8b 3f                	mov    (%edi),%edi$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	83 c4 10             	add    $0x10,%esp$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	85 ff                	test   %edi,%edi$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	0f 85 15 ff ff ff    	jne    f0100869 <mon_backtrace+0x3c>$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	5b                   	pop    %ebx$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	5e                   	pop    %esi$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	5f                   	pop    %edi$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	5d                   	pop    %ebp$/;"	l
f0100960	obj/kern/kernel.asm	/^f0100960:	c3                   	ret    $/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961 <monitor>:$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	55                   	push   %ebp$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	89 e5                	mov    %esp,%ebp$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	57                   	push   %edi$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	56                   	push   %esi$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	53                   	push   %ebx$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	83 ec 68             	sub    $0x68,%esp$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	e8 e0 f7 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	81 c3 99 19 01 00    	add    $0x11999,%ebx$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	8d 83 b0 fe fe ff    	lea    -0x10150(%ebx),%eax$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	50                   	push   %eax$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	e8 44 03 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	8d 83 d4 fe fe ff    	lea    -0x1012c(%ebx),%eax$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	e8 36 03 00 00       	call   f0100cc5 <cprintf>$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	8d bb 3b fd fe ff    	lea    -0x102c5(%ebx),%edi$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	eb 4a                	jmp    f01009e4 <monitor+0x83>$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	0f be c0             	movsbl %al,%eax$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	50                   	push   %eax$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	57                   	push   %edi$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	e8 f5 0e 00 00       	call   f010189c <strchr>$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	85 c0                	test   %eax,%eax$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	74 08                	je     f01009b6 <monitor+0x55>$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	c6 06 00             	movb   $0x0,(%esi)$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	eb 79                	jmp    f0100a2f <monitor+0xce>$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	80 3e 00             	cmpb   $0x0,(%esi)$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	74 7f                	je     f0100a3a <monitor+0xd9>$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	83 7d a4 0f          	cmpl   $0xf,-0x5c(%ebp)$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	74 0f                	je     f01009d0 <monitor+0x6f>$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	89 4d a4             	mov    %ecx,-0x5c(%ebp)$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	89 74 85 a8          	mov    %esi,-0x58(%ebp,%eax,4)$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	eb 44                	jmp    f0100a14 <monitor+0xb3>$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	6a 10                	push   $0x10$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	8d 83 40 fd fe ff    	lea    -0x102c0(%ebx),%eax$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	50                   	push   %eax$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	e8 e4 02 00 00       	call   f0100cc5 <cprintf>$/;"	l
f01009e1	obj/kern/kernel.asm	/^f01009e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	8d 83 37 fd fe ff    	lea    -0x102c9(%ebx),%eax$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	e8 6c 0c 00 00       	call   f0101664 <readline>$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	89 c6                	mov    %eax,%esi$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	85 c0                	test   %eax,%eax$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	74 ec                	je     f01009ed <monitor+0x8c>$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	eb 1e                	jmp    f0100a2f <monitor+0xce>$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	84 c0                	test   %al,%al$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	74 14                	je     f0100a2f <monitor+0xce>$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	50                   	push   %eax$/;"	l
f0100a22	obj/kern/kernel.asm	/^f0100a22:	57                   	push   %edi$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	e8 74 0e 00 00       	call   f010189c <strchr>$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	85 c0                	test   %eax,%eax$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	74 e2                	je     f0100a11 <monitor+0xb0>$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	84 c0                	test   %al,%al$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	0f 85 60 ff ff ff    	jne    f010099a <monitor+0x39>$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	c7 44 85 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%eax,4)$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	00 $/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	85 c0                	test   %eax,%eax$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	74 9b                	je     f01009e4 <monitor+0x83>$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	8d b3 18 1d 00 00    	lea    0x1d18(%ebx),%esi$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	ff 36                	pushl  (%esi)$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	e8 db 0d 00 00       	call   f010183e <strcmp>$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	85 c0                	test   %eax,%eax$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	74 29                	je     f0100a93 <monitor+0x132>$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	83 45 a0 01          	addl   $0x1,-0x60(%ebp)$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	83 c6 0c             	add    $0xc,%esi$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	75 dd                	jne    f0100a56 <monitor+0xf5>$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	8d 83 5d fd fe ff    	lea    -0x102a3(%ebx),%eax$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	50                   	push   %eax$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	e8 3a 02 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	e9 51 ff ff ff       	jmp    f01009e4 <monitor+0x83>$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	52                   	push   %edx$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	ff 94 83 20 1d 00 00 	call   *0x1d20(%ebx,%eax,4)$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	85 c0                	test   %eax,%eax$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	0f 89 2c ff ff ff    	jns    f01009e4 <monitor+0x83>$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	5b                   	pop    %ebx$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	5e                   	pop    %esi$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	5f                   	pop    %edi$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	5d                   	pop    %ebp$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	c3                   	ret    $/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0 <nvram_read>:$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	55                   	push   %ebp$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	57                   	push   %edi$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	56                   	push   %esi$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	53                   	push   %ebx$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	e8 81 f6 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	81 c3 3a 18 01 00    	add    $0x1183a,%ebx$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	89 c7                	mov    %eax,%edi$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	50                   	push   %eax$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	e8 62 01 00 00       	call   f0100c3e <mc146818_read>$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	89 c6                	mov    %eax,%esi$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	e8 55 01 00 00       	call   f0100c3e <mc146818_read>$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	09 f0                	or     %esi,%eax$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	5b                   	pop    %ebx$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	5e                   	pop    %esi$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	5f                   	pop    %edi$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	5d                   	pop    %ebp$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	c3                   	ret    $/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6 <mem_init>:$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	55                   	push   %ebp$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	57                   	push   %edi$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	56                   	push   %esi$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	53                   	push   %ebx$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	e8 4b f6 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	81 c3 04 18 01 00    	add    $0x11804,%ebx$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	e8 ac ff ff ff       	call   f0100ac0 <nvram_read>$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	89 c6                	mov    %eax,%esi$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	e8 a0 ff ff ff       	call   f0100ac0 <nvram_read>$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	89 c7                	mov    %eax,%edi$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	e8 94 ff ff ff       	call   f0100ac0 <nvram_read>$/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	85 c0                	test   %eax,%eax$/;"	l
f0100b31	obj/kern/kernel.asm	/^f0100b31:	75 0e                	jne    f0100b41 <mem_init+0x4b>$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	89 f0                	mov    %esi,%eax$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	85 ff                	test   %edi,%edi$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	74 0d                	je     f0100b46 <mem_init+0x50>$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	8d 87 00 04 00 00    	lea    0x400(%edi),%eax$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	eb 05                	jmp    f0100b46 <mem_init+0x50>$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	c7 c2 a8 46 11 f0    	mov    $0xf01146a8,%edx$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	89 c2                	mov    %eax,%edx$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	29 f2                	sub    %esi,%edx$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	52                   	push   %edx$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	56                   	push   %esi$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	50                   	push   %eax$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	8d 83 fc fe fe ff    	lea    -0x10104(%ebx),%eax$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	50                   	push   %eax$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	e8 5f 01 00 00       	call   f0100cc5 <cprintf>$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	8d 83 38 ff fe ff    	lea    -0x100c8(%ebx),%eax$/;"	l
f0100b6f	obj/kern/kernel.asm	/^f0100b6f:	50                   	push   %eax$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	68 80 00 00 00       	push   $0x80$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	8d 83 64 ff fe ff    	lea    -0x1009c(%ebx),%eax$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	50                   	push   %eax$/;"	l
f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	e8 18 f5 ff ff       	call   f0100099 <_panic>$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81 <page_init>:$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	55                   	push   %ebp$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	57                   	push   %edi$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	56                   	push   %esi$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	53                   	push   %ebx$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	e8 ab 00 00 00       	call   f0100c3a <__x86.get_pc_thunk.si>$/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	81 c6 79 17 01 00    	add    $0x11779,%esi$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	89 75 f0             	mov    %esi,-0x10(%ebp)$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	8b 9e 90 1f 00 00    	mov    0x1f90(%esi),%ebx$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	c7 c7 a8 46 11 f0    	mov    $0xf01146a8,%edi$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	c7 c6 b0 46 11 f0    	mov    $0xf01146b0,%esi$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	eb 1f                	jmp    f0100bd5 <page_init+0x54>$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100bbd	obj/kern/kernel.asm	/^f0100bbd:	89 d1                	mov    %edx,%ecx$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	03 0e                	add    (%esi),%ecx$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	89 d3                	mov    %edx,%ebx$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	03 1e                	add    (%esi),%ebx$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	39 07                	cmp    %eax,(%edi)$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	77 dd                	ja     f0100bb6 <page_init+0x35>$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	84 d2                	test   %dl,%dl$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	75 08                	jne    f0100be5 <page_init+0x64>$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	5b                   	pop    %ebx$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	5e                   	pop    %esi$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	5f                   	pop    %edi$/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	5d                   	pop    %ebp$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	c3                   	ret    $/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	89 98 90 1f 00 00    	mov    %ebx,0x1f90(%eax)$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	eb ed                	jmp    f0100bdd <page_init+0x5c>$/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0 <page_alloc>:$/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0:	55                   	push   %ebp$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	5d                   	pop    %ebp$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	c3                   	ret    $/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa <page_free>:$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	55                   	push   %ebp$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	5d                   	pop    %ebp$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	c3                   	ret    $/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff <page_decref>:$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	55                   	push   %ebp$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	66 83 68 04 01       	subw   $0x1,0x4(%eax)$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	5d                   	pop    %ebp$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	c3                   	ret    $/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c <pgdir_walk>:$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	55                   	push   %ebp$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	5d                   	pop    %ebp$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	c3                   	ret    $/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16 <page_insert>:$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	55                   	push   %ebp$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	5d                   	pop    %ebp$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	c3                   	ret    $/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20 <page_lookup>:$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	55                   	push   %ebp$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	5d                   	pop    %ebp$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	c3                   	ret    $/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a <page_remove>:$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	55                   	push   %ebp$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	5d                   	pop    %ebp$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	c3                   	ret    $/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f <tlb_invalidate>:$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	55                   	push   %ebp$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	0f 01 38             	invlpg (%eax)$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	5d                   	pop    %ebp$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	c3                   	ret    $/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a <__x86.get_pc_thunk.si>:$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	c3                   	ret    $/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e <mc146818_read>:$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	55                   	push   %ebp$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	ee                   	out    %al,(%dx)$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	ec                   	in     (%dx),%al$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	5d                   	pop    %ebp$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	c3                   	ret    $/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55 <mc146818_write>:$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	55                   	push   %ebp$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c58	obj/kern/kernel.asm	/^f0100c58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	ee                   	out    %al,(%dx)$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	ee                   	out    %al,(%dx)$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	5d                   	pop    %ebp$/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	c3                   	ret    $/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c <putch>:$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	55                   	push   %ebp$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	53                   	push   %ebx$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	e8 d7 f4 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	81 c3 90 16 01 00    	add    $0x11690,%ebx$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	e8 40 fa ff ff       	call   f01006c6 <cputchar>$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	c9                   	leave  $/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	c3                   	ret    $/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e <vcprintf>:$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	55                   	push   %ebp$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	53                   	push   %ebx$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	e8 b5 f4 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	81 c3 6e 16 01 00    	add    $0x1166e,%ebx$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100ca7	obj/kern/kernel.asm	/^f0100ca7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	50                   	push   %eax$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	8d 83 64 e9 fe ff    	lea    -0x1169c(%ebx),%eax$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	50                   	push   %eax$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	e8 98 04 00 00       	call   f0101155 <vprintfmt>$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	c9                   	leave  $/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	c3                   	ret    $/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5 <cprintf>:$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	55                   	push   %ebp$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	89 e5                	mov    %esp,%ebp$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	50                   	push   %eax$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	e8 b7 ff ff ff       	call   f0100c8e <vcprintf>$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	c9                   	leave  $/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	c3                   	ret    $/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9 <stab_binsearch>:$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	55                   	push   %ebp$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	89 e5                	mov    %esp,%ebp$/;"	l
f0100cdc	obj/kern/kernel.asm	/^f0100cdc:	57                   	push   %edi$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	56                   	push   %esi$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	53                   	push   %ebx$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	8b 32                	mov    (%edx),%esi$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	8b 01                	mov    (%ecx),%eax$/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	eb 2f                	jmp    f0100d2d <stab_binsearch+0x54>$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	39 c6                	cmp    %eax,%esi$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	7f 49                	jg     f0100d4e <stab_binsearch+0x75>$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	39 f9                	cmp    %edi,%ecx$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	75 ef                	jne    f0100cfe <stab_binsearch+0x25>$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0100d15	obj/kern/kernel.asm	/^f0100d15:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	73 35                	jae    f0100d53 <stab_binsearch+0x7a>$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	89 06                	mov    %eax,(%esi)$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	3b 75 f0             	cmp    -0x10(%ebp),%esi$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	7f 4e                	jg     f0100d80 <stab_binsearch+0xa7>$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	01 f0                	add    %esi,%eax$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	89 c3                	mov    %eax,%ebx$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	c1 eb 1f             	shr    $0x1f,%ebx$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	01 c3                	add    %eax,%ebx$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	d1 fb                	sar    %ebx$/;"	d
f0100d40	obj/kern/kernel.asm	/^f0100d40:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	89 d8                	mov    %ebx,%eax$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	eb b3                	jmp    f0100d01 <stab_binsearch+0x28>$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	eb da                	jmp    f0100d2d <stab_binsearch+0x54>$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	76 14                	jbe    f0100d6c <stab_binsearch+0x93>$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	eb c1                	jmp    f0100d2d <stab_binsearch+0x54>$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100d6f	obj/kern/kernel.asm	/^f0100d6f:	89 06                	mov    %eax,(%esi)$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	89 c6                	mov    %eax,%esi$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	eb ad                	jmp    f0100d2d <stab_binsearch+0x54>$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	74 16                	je     f0100d9c <stab_binsearch+0xc3>$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	8d 54 96 04          	lea    0x4(%esi,%edx,4),%edx$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	eb 12                	jmp    f0100dae <stab_binsearch+0xd5>$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	8b 00                	mov    (%eax),%eax$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	89 07                	mov    %eax,(%edi)$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	eb 16                	jmp    f0100dc1 <stab_binsearch+0xe8>$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	7d 0a                	jge    f0100dbc <stab_binsearch+0xe3>$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	75 ef                	jne    f0100dab <stab_binsearch+0xd2>$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	89 07                	mov    %eax,(%edi)$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	5b                   	pop    %ebx$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	5e                   	pop    %esi$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	5f                   	pop    %edi$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	5d                   	pop    %ebp$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	c3                   	ret    $/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9 <debuginfo_eip>:$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	55                   	push   %ebp$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	57                   	push   %edi$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	56                   	push   %esi$/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	53                   	push   %ebx$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	e8 78 f3 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	81 c3 31 15 01 00    	add    $0x11531,%ebx$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	8d 83 70 ff fe ff    	lea    -0x10090(%ebx),%eax$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	89 06                	mov    %eax,(%esi)$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	89 46 08             	mov    %eax,0x8(%esi)$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	0f 86 37 01 00 00    	jbe    f0100f49 <debuginfo_eip+0x180>$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	c7 c0 85 6a 10 f0    	mov    $0xf0106a85,%eax$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	39 83 fc ff ff ff    	cmp    %eax,-0x4(%ebx)$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	0f 86 04 02 00 00    	jbe    f0101028 <debuginfo_eip+0x25f>$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	c7 c0 d8 86 10 f0    	mov    $0xf01086d8,%eax$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	0f 85 fb 01 00 00    	jne    f010102f <debuginfo_eip+0x266>$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	c7 c0 94 24 10 f0    	mov    $0xf0102494,%eax$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	c7 c2 84 6a 10 f0    	mov    $0xf0106a84,%edx$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	29 c2                	sub    %eax,%edx$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	57                   	push   %edi$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	6a 64                	push   $0x64$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	e8 70 fe ff ff       	call   f0100cd9 <stab_binsearch>$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	85 c0                	test   %eax,%eax$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	0f 84 bf 01 00 00    	je     f0101036 <debuginfo_eip+0x26d>$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100e7a	obj/kern/kernel.asm	/^f0100e7a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	57                   	push   %edi$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	6a 24                	push   $0x24$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	c7 c0 94 24 10 f0    	mov    $0xf0102494,%eax$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	e8 42 fe ff ff       	call   f0100cd9 <stab_binsearch>$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	39 c8                	cmp    %ecx,%eax$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	0f 8f b6 00 00 00    	jg     f0100f61 <debuginfo_eip+0x198>$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	c7 c1 94 24 10 f0    	mov    $0xf0102494,%ecx$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	8d 0c 91             	lea    (%ecx,%edx,4),%ecx$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	8b 11                	mov    (%ecx),%edx$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	c7 c2 d8 86 10 f0    	mov    $0xf01086d8,%edx$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	81 ea 85 6a 10 f0    	sub    $0xf0106a85,%edx$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	39 55 c0             	cmp    %edx,-0x40(%ebp)$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	73 0c                	jae    f0100ed9 <debuginfo_eip+0x110>$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	81 c2 85 6a 10 f0    	add    $0xf0106a85,%edx$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	89 56 08             	mov    %edx,0x8(%esi)$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	8b 51 08             	mov    0x8(%ecx),%edx$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	89 56 10             	mov    %edx,0x10(%esi)$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	29 d7                	sub    %edx,%edi$/;"	l
f0100ee1	obj/kern/kernel.asm	/^f0100ee1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	6a 3a                	push   $0x3a$/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	e8 c6 09 00 00       	call   f01018bd <strfind>$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0100f03	obj/kern/kernel.asm	/^f0100f03:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	57                   	push   %edi$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	6a 44                	push   $0x44$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	c7 c0 94 24 10 f0    	mov    $0xf0102494,%eax$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	e8 c5 fd ff ff       	call   f0100cd9 <stab_binsearch>$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	0f 8f 1a 01 00 00    	jg     f010103d <debuginfo_eip+0x274>$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	89 d0                	mov    %edx,%eax$/;"	l
f0100f25	obj/kern/kernel.asm	/^f0100f25:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	c7 c1 94 24 10 f0    	mov    $0xf0102494,%ecx$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	0f b7 7c 0a 06       	movzwl 0x6(%edx,%ecx,1),%edi$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	89 7e 04             	mov    %edi,0x4(%esi)$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	8d 54 0a 04          	lea    0x4(%edx,%ecx,1),%edx$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	eb 36                	jmp    f0100f7f <debuginfo_eip+0x1b6>$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	8d 83 7a ff fe ff    	lea    -0x10086(%ebx),%eax$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	50                   	push   %eax$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	6a 7f                	push   $0x7f$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	8d 83 87 ff fe ff    	lea    -0x10079(%ebx),%eax$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	50                   	push   %eax$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	e8 38 f1 ff ff       	call   f0100099 <_panic>$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	e9 75 ff ff ff       	jmp    f0100eea <debuginfo_eip+0x121>$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	39 c7                	cmp    %eax,%edi$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	7f 24                	jg     f0100faa <debuginfo_eip+0x1e1>$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	74 46                	je     f0100fd4 <debuginfo_eip+0x20b>$/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	75 e2                	jne    f0100f75 <debuginfo_eip+0x1ac>$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	83 7a 04 00          	cmpl   $0x0,0x4(%edx)$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	74 dc                	je     f0100f75 <debuginfo_eip+0x1ac>$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	74 3b                	je     f0100fdd <debuginfo_eip+0x214>$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	eb 33                	jmp    f0100fdd <debuginfo_eip+0x214>$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	8b 7d d8             	mov    -0x28(%ebp),%edi$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	39 fa                	cmp    %edi,%edx$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	0f 8d 89 00 00 00    	jge    f0101049 <debuginfo_eip+0x280>$/;"	l
f0100fc0	obj/kern/kernel.asm	/^f0100fc0:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	89 d0                	mov    %edx,%eax$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	8d 0c 52             	lea    (%edx,%edx,2),%ecx$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	c7 c2 94 24 10 f0    	mov    $0xf0102494,%edx$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	8d 54 8a 04          	lea    0x4(%edx,%ecx,4),%edx$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	eb 3b                	jmp    f010100f <debuginfo_eip+0x246>$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	75 26                	jne    f0101003 <debuginfo_eip+0x23a>$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	c7 c0 94 24 10 f0    	mov    $0xf0102494,%eax$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	8b 14 90             	mov    (%eax,%edx,4),%edx$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	c7 c0 d8 86 10 f0    	mov    $0xf01086d8,%eax$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	81 e8 85 6a 10 f0    	sub    $0xf0106a85,%eax$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	39 c2                	cmp    %eax,%edx$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	73 b4                	jae    f0100fad <debuginfo_eip+0x1e4>$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	81 c2 85 6a 10 f0    	add    $0xf0106a85,%edx$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	89 16                	mov    %edx,(%esi)$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	eb aa                	jmp    f0100fad <debuginfo_eip+0x1e4>$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	eb d2                	jmp    f0100fdd <debuginfo_eip+0x214>$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	83 46 14 01          	addl   $0x1,0x14(%esi)$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	39 c7                	cmp    %eax,%edi$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	7e 31                	jle    f0101044 <debuginfo_eip+0x27b>$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	83 c2 0c             	add    $0xc,%edx$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	74 ea                	je     f010100b <debuginfo_eip+0x242>$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	eb 21                	jmp    f0101049 <debuginfo_eip+0x280>$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	eb 1a                	jmp    f0101049 <debuginfo_eip+0x280>$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	eb 13                	jmp    f0101049 <debuginfo_eip+0x280>$/;"	l
f0101036	obj/kern/kernel.asm	/^f0101036:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	eb 0c                	jmp    f0101049 <debuginfo_eip+0x280>$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	eb 05                	jmp    f0101049 <debuginfo_eip+0x280>$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	5b                   	pop    %ebx$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	5e                   	pop    %esi$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	5f                   	pop    %edi$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	5d                   	pop    %ebp$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	c3                   	ret    $/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051 <printnum>:$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	55                   	push   %ebp$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	89 e5                	mov    %esp,%ebp$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	57                   	push   %edi$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	56                   	push   %esi$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	53                   	push   %ebx$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010105a	obj/kern/kernel.asm	/^f010105a:	e8 01 06 00 00       	call   f0101660 <__x86.get_pc_thunk.cx>$/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	81 c1 a9 12 01 00    	add    $0x112a9,%ecx$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	89 c7                	mov    %eax,%edi$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	89 d6                	mov    %edx,%esi$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	89 5d dc             	mov    %ebx,-0x24(%ebp)$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	39 d3                	cmp    %edx,%ebx$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	72 09                	jb     f0101093 <printnum+0x42>$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	0f 87 83 00 00 00    	ja     f0101116 <printnum+0xc5>$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f010109f	obj/kern/kernel.asm	/^f010109f:	53                   	push   %ebx$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	e8 26 0a 00 00       	call   f0101ae0 <__udivdi3>$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	83 c4 18             	add    $0x18,%esp$/;"	l
f01010bd	obj/kern/kernel.asm	/^f01010bd:	52                   	push   %edx$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	50                   	push   %eax$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	89 f2                	mov    %esi,%edx$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	89 f8                	mov    %edi,%eax$/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	e8 89 ff ff ff       	call   f0101051 <printnum>$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	83 c4 20             	add    $0x20,%esp$/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	eb 13                	jmp    f01010e0 <printnum+0x8f>$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	56                   	push   %esi$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	ff d7                	call   *%edi$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	85 db                	test   %ebx,%ebx$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	7f ed                	jg     f01010cd <printnum+0x7c>$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	56                   	push   %esi$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	89 f3                	mov    %esi,%ebx$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	e8 03 0b 00 00       	call   f0101c00 <__umoddi3>$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	0f be 84 06 95 ff fe 	movsbl -0x1006b(%esi,%eax,1),%eax$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	ff $/;"	l
f0101108	obj/kern/kernel.asm	/^f0101108:	50                   	push   %eax$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	ff d7                	call   *%edi$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	5b                   	pop    %ebx$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	5e                   	pop    %esi$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	5f                   	pop    %edi$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	5d                   	pop    %ebp$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	c3                   	ret    $/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	eb be                	jmp    f01010d9 <printnum+0x88>$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b <sprintputch>:$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	55                   	push   %ebp$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	89 e5                	mov    %esp,%ebp$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	8b 10                	mov    (%eax),%edx$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	73 0a                	jae    f0101136 <sprintputch+0x1b>$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	89 08                	mov    %ecx,(%eax)$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	88 02                	mov    %al,(%edx)$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	5d                   	pop    %ebp$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	c3                   	ret    $/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138 <printfmt>:$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	55                   	push   %ebp$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	89 e5                	mov    %esp,%ebp$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	50                   	push   %eax$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	e8 05 00 00 00       	call   f0101155 <vprintfmt>$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	c9                   	leave  $/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	c3                   	ret    $/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155 <vprintfmt>:$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	55                   	push   %ebp$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	89 e5                	mov    %esp,%ebp$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	57                   	push   %edi$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	56                   	push   %esi$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	53                   	push   %ebx$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	e8 ec ef ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0101163	obj/kern/kernel.asm	/^f0101163:	81 c3 a5 11 01 00    	add    $0x111a5,%ebx$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	e9 63 03 00 00       	jmp    f01014d7 <.L34+0x40>$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%ebp)$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	0f b6 17             	movzbl (%edi),%edx$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	8d 42 dd             	lea    -0x23(%edx),%eax$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	3c 55                	cmp    $0x55,%al$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	0f 87 15 04 00 00    	ja     f01015be <.L22>$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	89 d9                	mov    %ebx,%ecx$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	03 8c 83 24 00 ff ff 	add    -0xffdc(%ebx,%eax,4),%ecx$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	ff e1                	jmp    *%ecx$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7 <.L70>:$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	eb d5                	jmp    f0101195 <vprintfmt+0x40>$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0 <.L28>:$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	eb cc                	jmp    f0101195 <vprintfmt+0x40>$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9 <.L29>:$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	0f be 17             	movsbl (%edi),%edx$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	77 55                	ja     f010123b <.L23+0xf>$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	83 c7 01             	add    $0x1,%edi$/;"	l
f01011e9	obj/kern/kernel.asm	/^f01011e9:	eb e9                	jmp    f01011d4 <.L29+0xb>$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb <.L26>:$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	8b 00                	mov    (%eax),%eax$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	79 90                	jns    f0101195 <vprintfmt+0x40>$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%ebp)$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	eb 81                	jmp    f0101195 <vprintfmt+0x40>$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214 <.L27>:$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	85 c0                	test   %eax,%eax$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	e9 69 ff ff ff       	jmp    f0101195 <vprintfmt+0x40>$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c <.L23>:$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	e9 5a ff ff ff       	jmp    f0101195 <vprintfmt+0x40>$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	eb bf                	jmp    f01011ff <.L26+0x14>$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240 <.L33>:$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	e9 49 ff ff ff       	jmp    f0101195 <vprintfmt+0x40>$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c <.L30>:$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	56                   	push   %esi$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	ff 30                	pushl  (%eax)$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	e9 6e 02 00 00       	jmp    f01014d4 <.L34+0x3d>$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266 <.L32>:$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	8b 00                	mov    (%eax),%eax$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	99                   	cltd   $/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	31 d0                	xor    %edx,%eax$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	29 d0                	sub    %edx,%eax$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	7f 27                	jg     f010129f <.L32+0x39>$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	8b 94 83 3c 1d 00 00 	mov    0x1d3c(%ebx,%eax,4),%edx$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	85 d2                	test   %edx,%edx$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	74 1c                	je     f010129f <.L32+0x39>$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	52                   	push   %edx$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	8d 83 b6 ff fe ff    	lea    -0x1004a(%ebx),%eax$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	50                   	push   %eax$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	56                   	push   %esi$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	e8 a4 fe ff ff       	call   f0101138 <printfmt>$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	e9 35 02 00 00       	jmp    f01014d4 <.L34+0x3d>$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	50                   	push   %eax$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	8d 83 ad ff fe ff    	lea    -0x10053(%ebx),%eax$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	50                   	push   %eax$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	56                   	push   %esi$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	e8 88 fe ff ff       	call   f0101138 <printfmt>$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	e9 19 02 00 00       	jmp    f01014d4 <.L34+0x3d>$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb <.L36>:$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	83 c0 04             	add    $0x4,%eax$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	8b 38                	mov    (%eax),%edi$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	85 ff                	test   %edi,%edi$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	8d 83 a6 ff fe ff    	lea    -0x1005a(%ebx),%eax$/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	0f 8e b5 00 00 00    	jle    f0101393 <.L36+0xd8>$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	75 08                	jne    f01012ec <.L36+0x31>$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	eb 6d                	jmp    f0101359 <.L36+0x9e>$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	57                   	push   %edi$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	e8 81 04 00 00       	call   f0101779 <strnlen>$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	29 c2                	sub    %eax,%edx$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	89 d7                	mov    %edx,%edi$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	eb 10                	jmp    f0101321 <.L36+0x66>$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	56                   	push   %esi$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	85 ff                	test   %edi,%edi$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	7f ec                	jg     f0101311 <.L36+0x56>$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	85 d2                	test   %edx,%edx$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	29 c2                	sub    %eax,%edx$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	eb 17                	jmp    f0101359 <.L36+0x9e>$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	75 30                	jne    f0101378 <.L36+0xbd>$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	50                   	push   %eax$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	83 c7 01             	add    $0x1,%edi$/;"	l
f010135c	obj/kern/kernel.asm	/^f010135c:	0f b6 57 ff          	movzbl -0x1(%edi),%edx$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	0f be c2             	movsbl %dl,%eax$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	85 c0                	test   %eax,%eax$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	74 52                	je     f01013b9 <.L36+0xfe>$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	85 f6                	test   %esi,%esi$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	78 d7                	js     f0101342 <.L36+0x87>$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	83 ee 01             	sub    $0x1,%esi$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	79 d2                	jns    f0101342 <.L36+0x87>$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	eb 32                	jmp    f01013aa <.L36+0xef>$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	0f be d2             	movsbl %dl,%edx$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	83 ea 20             	sub    $0x20,%edx$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	76 c5                	jbe    f0101348 <.L36+0x8d>$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	6a 3f                	push   $0x3f$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	eb c2                	jmp    f0101355 <.L36+0x9a>$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	eb be                	jmp    f0101359 <.L36+0x9e>$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	56                   	push   %esi$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	6a 20                	push   $0x20$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	85 ff                	test   %edi,%edi$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	7f ed                	jg     f010139b <.L36+0xe0>$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	e9 1b 01 00 00       	jmp    f01014d4 <.L34+0x3d>$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01013bf	obj/kern/kernel.asm	/^f01013bf:	eb e9                	jmp    f01013aa <.L36+0xef>$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1 <.L31>:$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	7e 40                	jle    f0101409 <.L31+0x48>$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	8b 00                	mov    (%eax),%eax$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	79 55                	jns    f010143b <.L31+0x7a>$/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	56                   	push   %esi$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	6a 2d                	push   $0x2d$/;"	l
f01013ec	obj/kern/kernel.asm	/^f01013ec:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	f7 da                	neg    %edx$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	f7 d9                	neg    %ecx$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	e9 b0 00 00 00       	jmp    f01014b9 <.L34+0x22>$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	85 c9                	test   %ecx,%ecx$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	75 17                	jne    f0101424 <.L31+0x63>$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	8b 00                	mov    (%eax),%eax$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	99                   	cltd   $/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101419	obj/kern/kernel.asm	/^f0101419:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	eb bc                	jmp    f01013e0 <.L31+0x1f>$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	8b 00                	mov    (%eax),%eax$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	99                   	cltd   $/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	eb a5                	jmp    f01013e0 <.L31+0x1f>$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	eb 71                	jmp    f01014b9 <.L34+0x22>$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448 <.L37>:$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	7e 15                	jle    f0101465 <.L37+0x1d>$/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	8b 10                	mov    (%eax),%edx$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	eb 54                	jmp    f01014b9 <.L34+0x22>$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	85 c9                	test   %ecx,%ecx$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	75 17                	jne    f0101480 <.L37+0x38>$/;"	l
f0101469	obj/kern/kernel.asm	/^f0101469:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	8b 10                	mov    (%eax),%edx$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	eb 39                	jmp    f01014b9 <.L34+0x22>$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	8b 10                	mov    (%eax),%edx$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	eb 22                	jmp    f01014b9 <.L34+0x22>$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497 <.L34>:$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	7e 5d                	jle    f01014fc <.L34+0x65>$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	8b 00                	mov    (%eax),%eax$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	8d 49 08             	lea    0x8(%ecx),%ecx$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	89 d1                	mov    %edx,%ecx$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	89 c2                	mov    %eax,%edx$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	57                   	push   %edi$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	50                   	push   %eax$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	51                   	push   %ecx$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	52                   	push   %edx$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	89 f2                	mov    %esi,%edx$/;"	l
f01014c9	obj/kern/kernel.asm	/^f01014c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	e8 80 fb ff ff       	call   f0101051 <printnum>$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	83 c4 20             	add    $0x20,%esp$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	83 c7 01             	add    $0x1,%edi$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	0f 84 8d fc ff ff    	je     f0101174 <vprintfmt+0x1f>$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	85 c0                	test   %eax,%eax$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	0f 84 f0 00 00 00    	je     f01015df <.L22+0x21>$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	56                   	push   %esi$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	50                   	push   %eax$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	eb db                	jmp    f01014d7 <.L34+0x40>$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	85 c9                	test   %ecx,%ecx$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	75 13                	jne    f0101513 <.L34+0x7c>$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	8b 10                	mov    (%eax),%edx$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	89 d0                	mov    %edx,%eax$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	99                   	cltd   $/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	8d 49 04             	lea    0x4(%ecx),%ecx$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	eb 9d                	jmp    f01014b0 <.L34+0x19>$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	8b 10                	mov    (%eax),%edx$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	89 d0                	mov    %edx,%eax$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	99                   	cltd   $/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	8d 49 04             	lea    0x4(%ecx),%ecx$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	eb 8a                	jmp    f01014b0 <.L34+0x19>$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526 <.L35>:$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529:	56                   	push   %esi$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	6a 30                	push   $0x30$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	56                   	push   %esi$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	6a 78                	push   $0x78$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	8b 10                	mov    (%eax),%edx$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	e9 64 ff ff ff       	jmp    f01014b9 <.L34+0x22>$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555 <.L38>:$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	7e 18                	jle    f0101575 <.L38+0x20>$/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	8b 10                	mov    (%eax),%edx$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	e9 44 ff ff ff       	jmp    f01014b9 <.L34+0x22>$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	85 c9                	test   %ecx,%ecx$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	75 1a                	jne    f0101593 <.L38+0x3e>$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	8b 10                	mov    (%eax),%edx$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	e9 26 ff ff ff       	jmp    f01014b9 <.L34+0x22>$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	8b 10                	mov    (%eax),%edx$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	e9 0c ff ff ff       	jmp    f01014b9 <.L34+0x22>$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad <.L25>:$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	56                   	push   %esi$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	6a 25                	push   $0x25$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	e9 16 ff ff ff       	jmp    f01014d4 <.L34+0x3d>$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be <.L22>:$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	56                   	push   %esi$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	6a 25                	push   $0x25$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	89 f8                	mov    %edi,%eax$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	eb 03                	jmp    f01015d1 <.L22+0x13>$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	75 f7                	jne    f01015ce <.L22+0x10>$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	e9 f5 fe ff ff       	jmp    f01014d4 <.L34+0x3d>$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	5b                   	pop    %ebx$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	5e                   	pop    %esi$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	5f                   	pop    %edi$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	5d                   	pop    %ebp$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	c3                   	ret    $/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7 <vsnprintf>:$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	55                   	push   %ebp$/;"	l
f01015e8	obj/kern/kernel.asm	/^f01015e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	53                   	push   %ebx$/;"	l
f01015eb	obj/kern/kernel.asm	/^f01015eb:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	e8 5c eb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	81 c3 15 0d 01 00    	add    $0x10d15,%ebx$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	85 c0                	test   %eax,%eax$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	74 2b                	je     f010163f <vsnprintf+0x58>$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	85 d2                	test   %edx,%edx$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	7e 27                	jle    f010163f <vsnprintf+0x58>$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	50                   	push   %eax$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	8d 83 13 ee fe ff    	lea    -0x111ed(%ebx),%eax$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	50                   	push   %eax$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	e8 27 fb ff ff       	call   f0101155 <vprintfmt>$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	83 c4 10             	add    $0x10,%esp$/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	c9                   	leave  $/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	c3                   	ret    $/;"	l
f010163f	obj/kern/kernel.asm	/^f010163f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	eb f4                	jmp    f010163a <vsnprintf+0x53>$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646 <snprintf>:$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	55                   	push   %ebp$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	89 e5                	mov    %esp,%ebp$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	50                   	push   %eax$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	e8 89 ff ff ff       	call   f01015e7 <vsnprintf>$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	c9                   	leave  $/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	c3                   	ret    $/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660 <__x86.get_pc_thunk.cx>:$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	8b 0c 24             	mov    (%esp),%ecx$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	c3                   	ret    $/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664 <readline>:$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	55                   	push   %ebp$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	89 e5                	mov    %esp,%ebp$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	57                   	push   %edi$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	56                   	push   %esi$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	53                   	push   %ebx$/;"	l
f010166a	obj/kern/kernel.asm	/^f010166a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	e8 dd ea ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	81 c3 96 0c 01 00    	add    $0x10c96,%ebx$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	85 c0                	test   %eax,%eax$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	74 13                	je     f0101692 <readline+0x2e>$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	50                   	push   %eax$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	8d 83 b6 ff fe ff    	lea    -0x1004a(%ebx),%eax$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	50                   	push   %eax$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	e8 36 f6 ff ff       	call   f0100cc5 <cprintf>$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	6a 00                	push   $0x0$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	e8 4b f0 ff ff       	call   f01006e7 <iscons>$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	eb 46                	jmp    f01016ef <readline+0x8b>$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	50                   	push   %eax$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	8d 83 7c 01 ff ff    	lea    -0xfe84(%ebx),%eax$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	50                   	push   %eax$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	e8 0c f6 ff ff       	call   f0100cc5 <cprintf>$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	5b                   	pop    %ebx$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	5e                   	pop    %esi$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	5f                   	pop    %edi$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	5d                   	pop    %ebp$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	c3                   	ret    $/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	75 05                	jne    f01016d4 <readline+0x70>$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	eb 1b                	jmp    f01016ef <readline+0x8b>$/;"	l
f01016d4	obj/kern/kernel.asm	/^f01016d4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	6a 08                	push   $0x8$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	e8 e8 ef ff ff       	call   f01006c6 <cputchar>$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016e1	obj/kern/kernel.asm	/^f01016e1:	eb ec                	jmp    f01016cf <readline+0x6b>$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	89 f0                	mov    %esi,%eax$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	88 84 3b 98 1f 00 00 	mov    %al,0x1f98(%ebx,%edi,1)$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	8d 7f 01             	lea    0x1(%edi),%edi$/;"	l
f01016ef	obj/kern/kernel.asm	/^f01016ef:	e8 e2 ef ff ff       	call   f01006d6 <getchar>$/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	89 c6                	mov    %eax,%esi$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	85 c0                	test   %eax,%eax$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	78 af                	js     f01016a9 <readline+0x45>$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	0f 94 c2             	sete   %dl$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	0f 94 c0             	sete   %al$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	08 c2                	or     %al,%dl$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	74 04                	je     f010170e <readline+0xaa>$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	85 ff                	test   %edi,%edi$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	7f bb                	jg     f01016c9 <readline+0x65>$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	83 fe 1f             	cmp    $0x1f,%esi$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	7e 1c                	jle    f010172f <readline+0xcb>$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	81 ff fe 03 00 00    	cmp    $0x3fe,%edi$/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	7f 14                	jg     f010172f <readline+0xcb>$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	74 c2                	je     f01016e3 <readline+0x7f>$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	56                   	push   %esi$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	e8 9c ef ff ff       	call   f01006c6 <cputchar>$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	eb b4                	jmp    f01016e3 <readline+0x7f>$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	83 fe 0a             	cmp    $0xa,%esi$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	74 05                	je     f0101739 <readline+0xd5>$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	83 fe 0d             	cmp    $0xd,%esi$/;"	l
f0101737	obj/kern/kernel.asm	/^f0101737:	75 b6                	jne    f01016ef <readline+0x8b>$/;"	l
f0101739	obj/kern/kernel.asm	/^f0101739:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	75 13                	jne    f0101752 <readline+0xee>$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	c6 84 3b 98 1f 00 00 	movb   $0x0,0x1f98(%ebx,%edi,1)$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	00 $/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	8d 83 98 1f 00 00    	lea    0x1f98(%ebx),%eax$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	e9 6f ff ff ff       	jmp    f01016c1 <readline+0x5d>$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	6a 0a                	push   $0xa$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	e8 6a ef ff ff       	call   f01006c6 <cputchar>$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	eb de                	jmp    f010173f <readline+0xdb>$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761 <strlen>:$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	55                   	push   %ebp$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	89 e5                	mov    %esp,%ebp$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101767	obj/kern/kernel.asm	/^f0101767:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	eb 03                	jmp    f0101771 <strlen+0x10>$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	75 f7                	jne    f010176e <strlen+0xd>$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	5d                   	pop    %ebp$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	c3                   	ret    $/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779 <strnlen>:$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	55                   	push   %ebp$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	89 e5                	mov    %esp,%ebp$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	eb 03                	jmp    f010178c <strnlen+0x13>$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	83 c0 01             	add    $0x1,%eax$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	39 d0                	cmp    %edx,%eax$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	74 06                	je     f0101796 <strnlen+0x1d>$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	75 f3                	jne    f0101789 <strnlen+0x10>$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	5d                   	pop    %ebp$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	c3                   	ret    $/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798 <strcpy>:$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	55                   	push   %ebp$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	89 e5                	mov    %esp,%ebp$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	53                   	push   %ebx$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	89 c2                	mov    %eax,%edx$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01017aa	obj/kern/kernel.asm	/^f01017aa:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	84 db                	test   %bl,%bl$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	75 ef                	jne    f01017a4 <strcpy+0xc>$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	5b                   	pop    %ebx$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	5d                   	pop    %ebp$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	c3                   	ret    $/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8 <strcat>:$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	55                   	push   %ebp$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	53                   	push   %ebx$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	53                   	push   %ebx$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	e8 9c ff ff ff       	call   f0101761 <strlen>$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	83 c4 04             	add    $0x4,%esp$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	01 d8                	add    %ebx,%eax$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	50                   	push   %eax$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	e8 c5 ff ff ff       	call   f0101798 <strcpy>$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	89 d8                	mov    %ebx,%eax$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	c9                   	leave  $/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	c3                   	ret    $/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da <strncpy>:$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	55                   	push   %ebp$/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	89 e5                	mov    %esp,%ebp$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	56                   	push   %esi$/;"	l
f01017de	obj/kern/kernel.asm	/^f01017de:	53                   	push   %ebx$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	89 f3                	mov    %esi,%ebx$/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	89 f2                	mov    %esi,%edx$/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	eb 0f                	jmp    f01017fd <strncpy+0x23>$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	83 c2 01             	add    $0x1,%edx$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01017f7	obj/kern/kernel.asm	/^f01017f7:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	39 da                	cmp    %ebx,%edx$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	75 ed                	jne    f01017ee <strncpy+0x14>$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	89 f0                	mov    %esi,%eax$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	5b                   	pop    %ebx$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	5e                   	pop    %esi$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	5d                   	pop    %ebp$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	c3                   	ret    $/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807 <strlcpy>:$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	55                   	push   %ebp$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	89 e5                	mov    %esp,%ebp$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	56                   	push   %esi$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	53                   	push   %ebx$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010180f	obj/kern/kernel.asm	/^f010180f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	89 f0                	mov    %esi,%eax$/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	85 c9                	test   %ecx,%ecx$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	75 0b                	jne    f010182a <strlcpy+0x23>$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	eb 17                	jmp    f0101838 <strlcpy+0x31>$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	39 d8                	cmp    %ebx,%eax$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	74 07                	je     f0101835 <strlcpy+0x2e>$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	84 c9                	test   %cl,%cl$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	75 ec                	jne    f0101821 <strlcpy+0x1a>$/;"	l
f0101835	obj/kern/kernel.asm	/^f0101835:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	29 f0                	sub    %esi,%eax$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	5b                   	pop    %ebx$/;"	l
f010183b	obj/kern/kernel.asm	/^f010183b:	5e                   	pop    %esi$/;"	l
f010183c	obj/kern/kernel.asm	/^f010183c:	5d                   	pop    %ebp$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	c3                   	ret    $/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e <strcmp>:$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	55                   	push   %ebp$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101844	obj/kern/kernel.asm	/^f0101844:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	eb 06                	jmp    f010184f <strcmp+0x11>$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	84 c0                	test   %al,%al$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	74 04                	je     f010185a <strcmp+0x1c>$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	3a 02                	cmp    (%edx),%al$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	74 ef                	je     f0101849 <strcmp+0xb>$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0101860	obj/kern/kernel.asm	/^f0101860:	29 d0                	sub    %edx,%eax$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	5d                   	pop    %ebp$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	c3                   	ret    $/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864 <strncmp>:$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	55                   	push   %ebp$/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	89 e5                	mov    %esp,%ebp$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	53                   	push   %ebx$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	89 c3                	mov    %eax,%ebx$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	eb 06                	jmp    f010187b <strncmp+0x17>$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	83 c2 01             	add    $0x1,%edx$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	39 d8                	cmp    %ebx,%eax$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	74 16                	je     f0101895 <strncmp+0x31>$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	84 c9                	test   %cl,%cl$/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	74 04                	je     f010188a <strncmp+0x26>$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	74 eb                	je     f0101875 <strncmp+0x11>$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	29 d0                	sub    %edx,%eax$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	5b                   	pop    %ebx$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	5d                   	pop    %ebp$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	c3                   	ret    $/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	eb f6                	jmp    f0101892 <strncmp+0x2e>$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c <strchr>:$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	55                   	push   %ebp$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	89 e5                	mov    %esp,%ebp$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	84 d2                	test   %dl,%dl$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	74 09                	je     f01018b6 <strchr+0x1a>$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	38 ca                	cmp    %cl,%dl$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	74 0a                	je     f01018bb <strchr+0x1f>$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	eb f0                	jmp    f01018a6 <strchr+0xa>$/;"	l
f01018b6	obj/kern/kernel.asm	/^f01018b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	5d                   	pop    %ebp$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	c3                   	ret    $/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd <strfind>:$/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	55                   	push   %ebp$/;"	l
f01018be	obj/kern/kernel.asm	/^f01018be:	89 e5                	mov    %esp,%ebp$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01018c3	obj/kern/kernel.asm	/^f01018c3:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	eb 03                	jmp    f01018cc <strfind+0xf>$/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	83 c0 01             	add    $0x1,%eax$/;"	l
f01018cc	obj/kern/kernel.asm	/^f01018cc:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	38 ca                	cmp    %cl,%dl$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	74 04                	je     f01018d7 <strfind+0x1a>$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	84 d2                	test   %dl,%dl$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	75 f2                	jne    f01018c9 <strfind+0xc>$/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7:	5d                   	pop    %ebp$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	c3                   	ret    $/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9 <memset>:$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	55                   	push   %ebp$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	89 e5                	mov    %esp,%ebp$/;"	l
f01018dc	obj/kern/kernel.asm	/^f01018dc:	57                   	push   %edi$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	56                   	push   %esi$/;"	l
f01018de	obj/kern/kernel.asm	/^f01018de:	53                   	push   %ebx$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	85 c9                	test   %ecx,%ecx$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	74 13                	je     f01018fc <memset+0x23>$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	75 05                	jne    f01018f6 <memset+0x1d>$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	74 0d                	je     f0101903 <memset+0x2a>$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	fc                   	cld    $/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	89 f8                	mov    %edi,%eax$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	5b                   	pop    %ebx$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	5e                   	pop    %esi$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	5f                   	pop    %edi$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	5d                   	pop    %ebp$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	c3                   	ret    $/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	89 d3                	mov    %edx,%ebx$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	89 d0                	mov    %edx,%eax$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	89 d6                	mov    %edx,%esi$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	c1 e6 10             	shl    $0x10,%esi$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	09 f0                	or     %esi,%eax$/;"	l
f0101918	obj/kern/kernel.asm	/^f0101918:	09 c2                	or     %eax,%edx$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	09 da                	or     %ebx,%edx$/;"	l
f010191c	obj/kern/kernel.asm	/^f010191c:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	89 d0                	mov    %edx,%eax$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	fc                   	cld    $/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	eb d6                	jmp    f01018fc <memset+0x23>$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926 <memmove>:$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	55                   	push   %ebp$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	89 e5                	mov    %esp,%ebp$/;"	l
f0101929	obj/kern/kernel.asm	/^f0101929:	57                   	push   %edi$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	56                   	push   %esi$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101934	obj/kern/kernel.asm	/^f0101934:	39 c6                	cmp    %eax,%esi$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	73 35                	jae    f010196d <memmove+0x47>$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	39 c2                	cmp    %eax,%edx$/;"	l
f010193d	obj/kern/kernel.asm	/^f010193d:	76 2e                	jbe    f010196d <memmove+0x47>$/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0101942	obj/kern/kernel.asm	/^f0101942:	89 d6                	mov    %edx,%esi$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	09 fe                	or     %edi,%esi$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010194c	obj/kern/kernel.asm	/^f010194c:	74 0c                	je     f010195a <memmove+0x34>$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	fd                   	std    $/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	fc                   	cld    $/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	eb 21                	jmp    f010197b <memmove+0x55>$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	75 ef                	jne    f010194e <memmove+0x28>$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	fd                   	std    $/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	eb ea                	jmp    f0101957 <memmove+0x31>$/;"	l
f010196d	obj/kern/kernel.asm	/^f010196d:	89 f2                	mov    %esi,%edx$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	09 c2                	or     %eax,%edx$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0101974	obj/kern/kernel.asm	/^f0101974:	74 09                	je     f010197f <memmove+0x59>$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	89 c7                	mov    %eax,%edi$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	fc                   	cld    $/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010197b	obj/kern/kernel.asm	/^f010197b:	5e                   	pop    %esi$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	5f                   	pop    %edi$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	5d                   	pop    %ebp$/;"	l
f010197e	obj/kern/kernel.asm	/^f010197e:	c3                   	ret    $/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	75 f2                	jne    f0101976 <memmove+0x50>$/;"	l
f0101984	obj/kern/kernel.asm	/^f0101984:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	89 c7                	mov    %eax,%edi$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	fc                   	cld    $/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	eb ed                	jmp    f010197b <memmove+0x55>$/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e <memcpy>:$/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	55                   	push   %ebp$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	e8 87 ff ff ff       	call   f0101926 <memmove>$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	c9                   	leave  $/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	c3                   	ret    $/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1 <memcmp>:$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	55                   	push   %ebp$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	56                   	push   %esi$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	53                   	push   %ebx$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	89 c6                	mov    %eax,%esi$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	39 f0                	cmp    %esi,%eax$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	74 1c                	je     f01019d1 <memcmp+0x30>$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	38 d9                	cmp    %bl,%cl$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	75 08                	jne    f01019c7 <memcmp+0x26>$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	83 c0 01             	add    $0x1,%eax$/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	eb ea                	jmp    f01019b1 <memcmp+0x10>$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	29 d8                	sub    %ebx,%eax$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	eb 05                	jmp    f01019d6 <memcmp+0x35>$/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01019d6	obj/kern/kernel.asm	/^f01019d6:	5b                   	pop    %ebx$/;"	l
f01019d7	obj/kern/kernel.asm	/^f01019d7:	5e                   	pop    %esi$/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	5d                   	pop    %ebp$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	c3                   	ret    $/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da <memfind>:$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	55                   	push   %ebp$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	89 e5                	mov    %esp,%ebp$/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01019e3	obj/kern/kernel.asm	/^f01019e3:	89 c2                	mov    %eax,%edx$/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f01019e8	obj/kern/kernel.asm	/^f01019e8:	39 d0                	cmp    %edx,%eax$/;"	l
f01019ea	obj/kern/kernel.asm	/^f01019ea:	73 09                	jae    f01019f5 <memfind+0x1b>$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	38 08                	cmp    %cl,(%eax)$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	74 05                	je     f01019f5 <memfind+0x1b>$/;"	l
f01019f0	obj/kern/kernel.asm	/^f01019f0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	eb f3                	jmp    f01019e8 <memfind+0xe>$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	5d                   	pop    %ebp$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	c3                   	ret    $/;"	l
f01019f7	obj/kern/kernel.asm	/^f01019f7 <strtol>:$/;"	l
f01019f7	obj/kern/kernel.asm	/^f01019f7:	55                   	push   %ebp$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	57                   	push   %edi$/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	56                   	push   %esi$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	53                   	push   %ebx$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101a03	obj/kern/kernel.asm	/^f0101a03:	eb 03                	jmp    f0101a08 <strtol+0x11>$/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	3c 20                	cmp    $0x20,%al$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	74 f6                	je     f0101a05 <strtol+0xe>$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	3c 09                	cmp    $0x9,%al$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	74 f2                	je     f0101a05 <strtol+0xe>$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0101a15	obj/kern/kernel.asm	/^f0101a15:	74 2e                	je     f0101a45 <strtol+0x4e>$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	74 2f                	je     f0101a4f <strtol+0x58>$/;"	l
f0101a20	obj/kern/kernel.asm	/^f0101a20:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	75 05                	jne    f0101a2d <strtol+0x36>$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	74 2c                	je     f0101a59 <strtol+0x62>$/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	85 db                	test   %ebx,%ebx$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	75 0a                	jne    f0101a3b <strtol+0x44>$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0101a36	obj/kern/kernel.asm	/^f0101a36:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	74 28                	je     f0101a63 <strtol+0x6c>$/;"	l
f0101a3b	obj/kern/kernel.asm	/^f0101a3b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	eb 50                	jmp    f0101a95 <strtol+0x9e>$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	eb d1                	jmp    f0101a20 <strtol+0x29>$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	eb c7                	jmp    f0101a20 <strtol+0x29>$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	74 0e                	je     f0101a6d <strtol+0x76>$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	85 db                	test   %ebx,%ebx$/;"	l
f0101a61	obj/kern/kernel.asm	/^f0101a61:	75 d8                	jne    f0101a3b <strtol+0x44>$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0101a6b	obj/kern/kernel.asm	/^f0101a6b:	eb ce                	jmp    f0101a3b <strtol+0x44>$/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0101a70	obj/kern/kernel.asm	/^f0101a70:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0101a75	obj/kern/kernel.asm	/^f0101a75:	eb c4                	jmp    f0101a3b <strtol+0x44>$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	89 f3                	mov    %esi,%ebx$/;"	l
f0101a7c	obj/kern/kernel.asm	/^f0101a7c:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	77 29                	ja     f0101aaa <strtol+0xb3>$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0101a87	obj/kern/kernel.asm	/^f0101a87:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	7d 30                	jge    f0101abc <strtol+0xc5>$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101a8f	obj/kern/kernel.asm	/^f0101a8f:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	01 d0                	add    %edx,%eax$/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	89 f3                	mov    %esi,%ebx$/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	77 d5                	ja     f0101a77 <strtol+0x80>$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101aa5	obj/kern/kernel.asm	/^f0101aa5:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	eb dd                	jmp    f0101a87 <strtol+0x90>$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0101aad	obj/kern/kernel.asm	/^f0101aad:	89 f3                	mov    %esi,%ebx$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	77 08                	ja     f0101abc <strtol+0xc5>$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	eb cb                	jmp    f0101a87 <strtol+0x90>$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	74 05                	je     f0101ac7 <strtol+0xd0>$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	89 c2                	mov    %eax,%edx$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	f7 da                	neg    %edx$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	85 ff                	test   %edi,%edi$/;"	l
f0101acd	obj/kern/kernel.asm	/^f0101acd:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	5b                   	pop    %ebx$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	5e                   	pop    %esi$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	5f                   	pop    %edi$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	5d                   	pop    %ebp$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	c3                   	ret    $/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	66 90                	xchg   %ax,%ax$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	66 90                	xchg   %ax,%ax$/;"	l
f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	66 90                	xchg   %ax,%ax$/;"	l
f0101adb	obj/kern/kernel.asm	/^f0101adb:	66 90                	xchg   %ax,%ax$/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	66 90                	xchg   %ax,%ax$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	90                   	nop$/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0 <__udivdi3>:$/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0:	55                   	push   %ebp$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	57                   	push   %edi$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	56                   	push   %esi$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	53                   	push   %ebx$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	8b 6c 24 30          	mov    0x30(%esp),%ebp$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	8b 5c 24 38          	mov    0x38(%esp),%ebx$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	85 d2                	test   %edx,%edx$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	75 35                	jne    f0101b30 <__udivdi3+0x50>$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	39 f3                	cmp    %esi,%ebx$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	0f 87 bd 00 00 00    	ja     f0101bc0 <__udivdi3+0xe0>$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	85 db                	test   %ebx,%ebx$/;"	l
f0101b05	obj/kern/kernel.asm	/^f0101b05:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	75 0b                	jne    f0101b14 <__udivdi3+0x34>$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	31 d2                	xor    %edx,%edx$/;"	l
f0101b10	obj/kern/kernel.asm	/^f0101b10:	f7 f3                	div    %ebx$/;"	l
f0101b12	obj/kern/kernel.asm	/^f0101b12:	89 c1                	mov    %eax,%ecx$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	31 d2                	xor    %edx,%edx$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	89 f0                	mov    %esi,%eax$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	f7 f1                	div    %ecx$/;"	l
f0101b1a	obj/kern/kernel.asm	/^f0101b1a:	89 c6                	mov    %eax,%esi$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	89 e8                	mov    %ebp,%eax$/;"	l
f0101b1e	obj/kern/kernel.asm	/^f0101b1e:	89 f7                	mov    %esi,%edi$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	f7 f1                	div    %ecx$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	89 fa                	mov    %edi,%edx$/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	5b                   	pop    %ebx$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	5e                   	pop    %esi$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	5f                   	pop    %edi$/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	5d                   	pop    %ebp$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	c3                   	ret    $/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	39 f2                	cmp    %esi,%edx$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	77 7c                	ja     f0101bb0 <__udivdi3+0xd0>$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	0f bd fa             	bsr    %edx,%edi$/;"	l
f0101b37	obj/kern/kernel.asm	/^f0101b37:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0101b3a	obj/kern/kernel.asm	/^f0101b3a:	0f 84 98 00 00 00    	je     f0101bd8 <__udivdi3+0xf8>$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	89 f9                	mov    %edi,%ecx$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0101b47	obj/kern/kernel.asm	/^f0101b47:	29 f8                	sub    %edi,%eax$/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	d3 e2                	shl    %cl,%edx$/;"	d
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	89 c1                	mov    %eax,%ecx$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	89 da                	mov    %ebx,%edx$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	d3 ea                	shr    %cl,%edx$/;"	d
f0101b55	obj/kern/kernel.asm	/^f0101b55:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	09 d1                	or     %edx,%ecx$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	89 f2                	mov    %esi,%edx$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	89 f9                	mov    %edi,%ecx$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	d3 e3                	shl    %cl,%ebx$/;"	d
f0101b65	obj/kern/kernel.asm	/^f0101b65:	89 c1                	mov    %eax,%ecx$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	d3 ea                	shr    %cl,%edx$/;"	d
f0101b69	obj/kern/kernel.asm	/^f0101b69:	89 f9                	mov    %edi,%ecx$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	d3 e6                	shl    %cl,%esi$/;"	d
f0101b71	obj/kern/kernel.asm	/^f0101b71:	89 eb                	mov    %ebp,%ebx$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	89 c1                	mov    %eax,%ecx$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	d3 eb                	shr    %cl,%ebx$/;"	d
f0101b77	obj/kern/kernel.asm	/^f0101b77:	09 de                	or     %ebx,%esi$/;"	l
f0101b79	obj/kern/kernel.asm	/^f0101b79:	89 f0                	mov    %esi,%eax$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	89 d6                	mov    %edx,%esi$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b83	obj/kern/kernel.asm	/^f0101b83:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	39 d6                	cmp    %edx,%esi$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	72 0c                	jb     f0101b97 <__udivdi3+0xb7>$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	89 f9                	mov    %edi,%ecx$/;"	l
f0101b8d	obj/kern/kernel.asm	/^f0101b8d:	d3 e5                	shl    %cl,%ebp$/;"	d
f0101b8f	obj/kern/kernel.asm	/^f0101b8f:	39 c5                	cmp    %eax,%ebp$/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	73 5d                	jae    f0101bf0 <__udivdi3+0x110>$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	39 d6                	cmp    %edx,%esi$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	75 59                	jne    f0101bf0 <__udivdi3+0x110>$/;"	l
f0101b97	obj/kern/kernel.asm	/^f0101b97:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	31 ff                	xor    %edi,%edi$/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	89 fa                	mov    %edi,%edx$/;"	l
f0101b9e	obj/kern/kernel.asm	/^f0101b9e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	5b                   	pop    %ebx$/;"	l
f0101ba2	obj/kern/kernel.asm	/^f0101ba2:	5e                   	pop    %esi$/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	5f                   	pop    %edi$/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	5d                   	pop    %ebp$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	c3                   	ret    $/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	31 ff                	xor    %edi,%edi$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	31 c0                	xor    %eax,%eax$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	89 fa                	mov    %edi,%edx$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101bb9	obj/kern/kernel.asm	/^f0101bb9:	5b                   	pop    %ebx$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	5e                   	pop    %esi$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	5f                   	pop    %edi$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	5d                   	pop    %ebp$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	c3                   	ret    $/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	66 90                	xchg   %ax,%ax$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	31 ff                	xor    %edi,%edi$/;"	l
f0101bc2	obj/kern/kernel.asm	/^f0101bc2:	89 e8                	mov    %ebp,%eax$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	89 f2                	mov    %esi,%edx$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	f7 f3                	div    %ebx$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	89 fa                	mov    %edi,%edx$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101bcd	obj/kern/kernel.asm	/^f0101bcd:	5b                   	pop    %ebx$/;"	l
f0101bce	obj/kern/kernel.asm	/^f0101bce:	5e                   	pop    %esi$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	5f                   	pop    %edi$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	5d                   	pop    %ebp$/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	c3                   	ret    $/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0101bd8	obj/kern/kernel.asm	/^f0101bd8:	39 f2                	cmp    %esi,%edx$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	72 06                	jb     f0101be2 <__udivdi3+0x102>$/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	31 c0                	xor    %eax,%eax$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	39 eb                	cmp    %ebp,%ebx$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	77 d2                	ja     f0101bb4 <__udivdi3+0xd4>$/;"	l
f0101be2	obj/kern/kernel.asm	/^f0101be2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101be7	obj/kern/kernel.asm	/^f0101be7:	eb cb                	jmp    f0101bb4 <__udivdi3+0xd4>$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	89 d8                	mov    %ebx,%eax$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	31 ff                	xor    %edi,%edi$/;"	l
f0101bf4	obj/kern/kernel.asm	/^f0101bf4:	eb be                	jmp    f0101bb4 <__udivdi3+0xd4>$/;"	l
f0101bf6	obj/kern/kernel.asm	/^f0101bf6:	66 90                	xchg   %ax,%ax$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	66 90                	xchg   %ax,%ax$/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	66 90                	xchg   %ax,%ax$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	66 90                	xchg   %ax,%ax$/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	66 90                	xchg   %ax,%ax$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00 <__umoddi3>:$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	55                   	push   %ebp$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	57                   	push   %edi$/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	56                   	push   %esi$/;"	l
f0101c03	obj/kern/kernel.asm	/^f0101c03:	53                   	push   %ebx$/;"	l
f0101c04	obj/kern/kernel.asm	/^f0101c04:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	8b 74 24 30          	mov    0x30(%esp),%esi$/;"	l
f0101c0f	obj/kern/kernel.asm	/^f0101c0f:	8b 5c 24 34          	mov    0x34(%esp),%ebx$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0101c17	obj/kern/kernel.asm	/^f0101c17:	85 ed                	test   %ebp,%ebp$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	89 f0                	mov    %esi,%eax$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	89 da                	mov    %ebx,%edx$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	75 19                	jne    f0101c38 <__umoddi3+0x38>$/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	39 df                	cmp    %ebx,%edi$/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	0f 86 b1 00 00 00    	jbe    f0101cd8 <__umoddi3+0xd8>$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	f7 f7                	div    %edi$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	89 d0                	mov    %edx,%eax$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	31 d2                	xor    %edx,%edx$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	5b                   	pop    %ebx$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	5e                   	pop    %esi$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	5f                   	pop    %edi$/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	5d                   	pop    %ebp$/;"	l
f0101c34	obj/kern/kernel.asm	/^f0101c34:	c3                   	ret    $/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	39 dd                	cmp    %ebx,%ebp$/;"	l
f0101c3a	obj/kern/kernel.asm	/^f0101c3a:	77 f1                	ja     f0101c2d <__umoddi3+0x2d>$/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	0f bd cd             	bsr    %ebp,%ecx$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	0f 84 b4 00 00 00    	je     f0101d00 <__umoddi3+0x100>$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	89 c2                	mov    %eax,%edx$/;"	l
f0101c53	obj/kern/kernel.asm	/^f0101c53:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	29 c2                	sub    %eax,%edx$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	89 c1                	mov    %eax,%ecx$/;"	l
f0101c5b	obj/kern/kernel.asm	/^f0101c5b:	89 f8                	mov    %edi,%eax$/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	d3 e5                	shl    %cl,%ebp$/;"	d
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	89 d1                	mov    %edx,%ecx$/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	d3 e8                	shr    %cl,%eax$/;"	d
f0101c67	obj/kern/kernel.asm	/^f0101c67:	09 c5                	or     %eax,%ebp$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	89 c1                	mov    %eax,%ecx$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	d3 e7                	shl    %cl,%edi$/;"	d
f0101c71	obj/kern/kernel.asm	/^f0101c71:	89 d1                	mov    %edx,%ecx$/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	89 df                	mov    %ebx,%edi$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	d3 ef                	shr    %cl,%edi$/;"	d
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	89 c1                	mov    %eax,%ecx$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	89 f0                	mov    %esi,%eax$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	d3 e3                	shl    %cl,%ebx$/;"	d
f0101c81	obj/kern/kernel.asm	/^f0101c81:	89 d1                	mov    %edx,%ecx$/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	89 fa                	mov    %edi,%edx$/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	d3 e8                	shr    %cl,%eax$/;"	d
f0101c87	obj/kern/kernel.asm	/^f0101c87:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	09 d8                	or     %ebx,%eax$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	f7 f5                	div    %ebp$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	d3 e6                	shl    %cl,%esi$/;"	d
f0101c92	obj/kern/kernel.asm	/^f0101c92:	89 d1                	mov    %edx,%ecx$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	39 d1                	cmp    %edx,%ecx$/;"	l
f0101c9a	obj/kern/kernel.asm	/^f0101c9a:	89 c3                	mov    %eax,%ebx$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	89 d7                	mov    %edx,%edi$/;"	l
f0101c9e	obj/kern/kernel.asm	/^f0101c9e:	72 06                	jb     f0101ca6 <__umoddi3+0xa6>$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	75 0e                	jne    f0101cb0 <__umoddi3+0xb0>$/;"	l
f0101ca2	obj/kern/kernel.asm	/^f0101ca2:	39 c6                	cmp    %eax,%esi$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	73 0a                	jae    f0101cb0 <__umoddi3+0xb0>$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	2b 44 24 08          	sub    0x8(%esp),%eax$/;"	l
f0101caa	obj/kern/kernel.asm	/^f0101caa:	19 ea                	sbb    %ebp,%edx$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	89 d7                	mov    %edx,%edi$/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	89 c3                	mov    %eax,%ebx$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	89 ca                	mov    %ecx,%edx$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	0f b6 4c 24 0c       	movzbl 0xc(%esp),%ecx$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	29 de                	sub    %ebx,%esi$/;"	l
f0101cb9	obj/kern/kernel.asm	/^f0101cb9:	19 fa                	sbb    %edi,%edx$/;"	l
f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	8b 5c 24 04          	mov    0x4(%esp),%ebx$/;"	l
f0101cbf	obj/kern/kernel.asm	/^f0101cbf:	89 d0                	mov    %edx,%eax$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	d3 e0                	shl    %cl,%eax$/;"	d
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	d3 ee                	shr    %cl,%esi$/;"	d
f0101cc7	obj/kern/kernel.asm	/^f0101cc7:	d3 ea                	shr    %cl,%edx$/;"	d
f0101cc9	obj/kern/kernel.asm	/^f0101cc9:	09 f0                	or     %esi,%eax$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	5b                   	pop    %ebx$/;"	l
f0101ccf	obj/kern/kernel.asm	/^f0101ccf:	5e                   	pop    %esi$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	5f                   	pop    %edi$/;"	l
f0101cd1	obj/kern/kernel.asm	/^f0101cd1:	5d                   	pop    %ebp$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	c3                   	ret    $/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	90                   	nop$/;"	l
f0101cd4	obj/kern/kernel.asm	/^f0101cd4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	85 ff                	test   %edi,%edi$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	89 f9                	mov    %edi,%ecx$/;"	l
f0101cdc	obj/kern/kernel.asm	/^f0101cdc:	75 0b                	jne    f0101ce9 <__umoddi3+0xe9>$/;"	l
f0101cde	obj/kern/kernel.asm	/^f0101cde:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101ce3	obj/kern/kernel.asm	/^f0101ce3:	31 d2                	xor    %edx,%edx$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	f7 f7                	div    %edi$/;"	l
f0101ce7	obj/kern/kernel.asm	/^f0101ce7:	89 c1                	mov    %eax,%ecx$/;"	l
f0101ce9	obj/kern/kernel.asm	/^f0101ce9:	89 d8                	mov    %ebx,%eax$/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	31 d2                	xor    %edx,%edx$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	f7 f1                	div    %ecx$/;"	l
f0101cef	obj/kern/kernel.asm	/^f0101cef:	89 f0                	mov    %esi,%eax$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	f7 f1                	div    %ecx$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	e9 31 ff ff ff       	jmp    f0101c29 <__umoddi3+0x29>$/;"	l
f0101cf8	obj/kern/kernel.asm	/^f0101cf8:	90                   	nop$/;"	l
f0101cf9	obj/kern/kernel.asm	/^f0101cf9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	39 dd                	cmp    %ebx,%ebp$/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02:	72 08                	jb     f0101d0c <__umoddi3+0x10c>$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	39 f7                	cmp    %esi,%edi$/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	0f 87 21 ff ff ff    	ja     f0101c2d <__umoddi3+0x2d>$/;"	l
f0101d0c	obj/kern/kernel.asm	/^f0101d0c:	89 da                	mov    %ebx,%edx$/;"	l
f0101d0e	obj/kern/kernel.asm	/^f0101d0e:	89 f0                	mov    %esi,%eax$/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	29 f8                	sub    %edi,%eax$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	19 ea                	sbb    %ebp,%edx$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	e9 14 ff ff ff       	jmp    f0101c2d <__umoddi3+0x2d>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fs_test	fs/test.c	/^fs_test(void)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	73;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon1	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon1	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
